{"version":3,"sources":["services/messaging-service.js","services/auth-service.js","services/user-service.js","services/thumbnail-service.js","services/playlist-service.js","components/header/header.js","components/playlist-search-bar/playlist-search-bar.js","components/auth-inputs/authInputs.js","components/messaging/messaging.js","components/conversations/conversations.js","components/conversation-snippet/conversation-snippet.js","components/side-menu/side-menu.js","components/playlist/playlist.js","components/player/player.js","components/playlist-create/playlist-create.js","components/playlists/playlists.js","components/sortable-grid/sortable-grid.js","components/track-thumbnail/track-thumbnail.js","components/group-chat/group-chat.js","components/chat/chat.js","components/general-modal/general-modal.js","material-overrides/header.js","App.js","hooks/useToggle.js","serviceWorker.js","index.js","assets/cassette.gif"],"names":["socket","axios","require","logout","post","then","catch","login","email","password","response","error","register","uniqueNamesGenerator","starWars","connectSocket","socketUrl","window","location","hostname","io","connect","authenticateSocket","on","emit","console","log","msg","JSON","stringify","data","fetchMoreMessages","conversations","correspondent_id","get","_id","messages","length","addMessages","updatedMessages","concat","updatedConversations","sendPrivateMessage","evt","messageToSend","preventDefault","reciever_id","contents","sendGroupMessage","correspondent","group","leaveGroup","disconnectSocket","close","updateConversations","latestMessage","newConversation","unshift","message","getUsername","currentUser","username","dictionaries","config","getCurrentUser","getUsers","usersWithUsernames","filter","user","indexUsers","getConversations","indexConversationsByCorrespondent","setUsername","userId","put","indexedConversations","forEach","conversation","users","indexedUsers","RE_VIMEO","RE_YOUTUBE","getThumbnailURL","url","urlobj","parse","indexOf","host","video_id","query","v","match","exec","pathname","res","thumbnail_large","createPlaylist","title","tracks","updatePlaylist","playlistId","playlistUpdates","deletePlaylist","delete","getPlaylists","getUserPlaylists","getPlaylist","getRecentPlaylists","Header","props","useState","showAuthInputs","setShowAuthInputs","showRegisterInputs","setShowRegisterInputs","temporaryMessage","setTemporaryMessage","enterUsername","setEnterUsername","history","useHistory","useEffect","accomodateVerificationRedirect","resetHeader","handleLogin","input","authService","status","messagingService","welcome","displayTemporaryMessage","loadUserData","displayAuthResponse","handleRegister","passwordConfirm","Object","values","toUpperCase","URLSearchParams","search","push","setTimeout","id","className","Typography","variant","loaded","Fragment","SideMenu","Button","onClick","loginOrRegister","handleSetUsername","userService","PlaylistSearchBar","playlists","messagingSidebarOpen","style","fontSize","toggleMessagingSidebar","Autocomplete","size","options","onChange","playlist","getOptionLabel","option","renderInput","params","TextField","InputProps","color","label","AuthInputs","authInput","setAuthInput","emailInput","useRef","handleEnterPressed","key","loginRegisterOrSetUsername","current","focus","authInputStyles","border","autoFocus","inputRef","value","target","onKeyDown","placeholder","type","Messaging","setCorrespondent","setConversations","setLatestMessage","newMessageCount","incrementNewMessageCount","fetchCount","incrementFetchCount","Conversations","Chat","getMessages","InputLabelProps","keys","map","anchor","React","sideMenu","state","setState","toggleSideMenu","open","event","handleLogout","height","Drawer","onClose","role","List","ListItem","button","ListItemIcon","ListItemText","primary","Playlist","playerReady","setPlayerReady","setPlaylist","currentTrackIndex","setCurrentTrackIndex","recentGroup","setRecentGroup","setNewPlaylist","initializeChat","urlParam","playlistService","trackForward","Player","currentTrack","GroupChat","isFacebookUrl","test","width","controls","onEnded","playing","onReady","margin","textAlign","setTracks","setTitle","errors","setErrors","trackToAdd","setTrackToAdd","edit","addTrack","a","ReactPlayer","canPlay","thumbnailService","thumbnailUrl","SortableGrid","deleteTrack","index","splice","Playlists","setPlaylists","playlistToDelete","setPlaylistToDelete","deleteModalOpen","setDeleteModalOpen","getActivePlaylists","play","track","closeDeleteModal","uniquePlaylists","Map","gridColumn","src","DefaultThumbnail","openDeleteModal","GeneralModal","action","handleClose","item","SortableItem","sortableElement","i","TrackThumbnail","SortableContainer","sortableContainer","children","axis","onSortEnd","oldIndex","newIndex","previousTracks","arrayMove","hovered","setHovered","onMouseEnter","onMouseLeave","setMessages","messagesSent","setMessagesSent","setMessageToSend","endOfChat","sendMessage","ref","scrollPosition","scrollIntoView","onScroll","scrollTop","sender","displayMessages","multiline","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","backgroundColor","borderRadius","boxShadow","shadows","padding","spacing","classes","modalStyle","body","Modal","aria-labelledby","createMuiTheme","palette","main","App","initialValue","setValue","toggle","useCallback","useToggle","messagingSidebarStatus","setMessagingSidebarStatus","setCurrentUser","setUsers","setSocket","recentPlaylists","setRecentPlaylists","setLoaded","loadRecentPlaylists","setUser","setAnonymousUser","name","content","ThemeProvider","undefined","path","render","Boolean","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d486728b.chunk.js","sourcesContent":["import io from \"socket.io-client\";\n\nconst { uniqueNamesGenerator, starWars } = require(\"unique-names-generator\");\nconst axios = require(\"axios\");\nlet socket;\n\nexport const connectSocket = () => {\n  const socketUrl =\n    process.env.NODE_ENV === \"production\"\n      ? window.location.hostname\n      : \"http://localhost:8080\";\n  socket = io.connect(socketUrl);\n  return socket;\n};\n\nexport const authenticateSocket = () => {\n  socket = connectSocket();\n  socket.on(\"connect\", function () {\n    socket\n      .emit(\"authenticate\")\n      .on(\"authenticated\", () => {\n        console.log(\"socket authentication complete\");\n      })\n      .on(\"unauthorized\", (msg) => {\n        console.log(`unauthorized: ${JSON.stringify(msg.data)}`);\n      });\n  });\n  return socket;\n};\n\nexport const fetchMoreMessages = (conversations, correspondent_id) =>\n  axios\n    .get(\n      `/api/users/current/conversations/${conversations[correspondent_id]._id}/load-messages/${conversations[correspondent_id].messages.length}`\n    )\n    .then((response) => {\n      return addMessages(conversations, correspondent_id, response.data);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\nconst addMessages = (conversations, correspondent_id, messages) => {\n  const updatedMessages = conversations[correspondent_id].messages.concat(\n    messages\n  );\n  let updatedConversations = conversations;\n  updatedConversations[correspondent_id].messages = updatedMessages;\n  return updatedConversations;\n};\n\nexport const sendPrivateMessage = (evt, messageToSend, correspondent_id) => {\n  evt.preventDefault();\n  socket.emit(\"message\", {\n    reciever_id: correspondent_id,\n    contents: messageToSend,\n  });\n  return true;\n};\n\nexport const sendGroupMessage = (evt, messageToSend, correspondent, group) => {\n  evt.preventDefault();\n  socket.emit(\"group-message\", { correspondent, messageToSend, group });\n  return true;\n};\n\nexport const leaveGroup = (group) => {\n  socket && socket.emit(\"leave-group\", group);\n};\n\nexport const disconnectSocket = () => {\n  socket && socket.close();\n  socket = null;\n};\n\nexport const updateConversations = (latestMessage, conversations) => {\n  let updatedConversations = conversations;\n  if (latestMessage) {\n    if (latestMessage.newConversation) {\n      updatedConversations[latestMessage.correspondent] =\n        latestMessage.newConversation;\n    } else {\n      updatedConversations[latestMessage.correspondent].messages.unshift(\n        latestMessage.message\n      );\n    }\n  }\n  return updatedConversations;\n};\n\nexport const getUsername = (currentUser) => {\n  if (currentUser) {\n    return currentUser.username;\n  } else {\n    return uniqueNamesGenerator({\n      dictionaries: [starWars],\n    });\n  }\n};\n","const axios = require(\"axios\");\n\nexport const logout = () =>\n  axios\n    .post(\"/api/auth/logout\")\n    .then(() => {\n      return true;\n    })\n    .catch(function () {\n      return false;\n    });\n\nexport const login = (email, password) =>\n  axios\n    .post(`/api/auth/login`, {\n      email,\n      password,\n    })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      return error.response;\n    });\n\nexport const register = (email, password) =>\n  axios\n    .post(`/api/auth/register`, {\n      email,\n      password,\n    })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      return error.response;\n    });\n","require(\"dotenv\").config();\n\nconst axios = require(\"axios\");\n\nexport const getCurrentUser = () =>\n  axios\n    .get(`/api/users/current`)\n    .then((response) => {\n      return response.data;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\nexport const getUsers = () =>\n  axios\n    .get(`/api/users`)\n    .then((response) => {\n      const usersWithUsernames = response.data.filter((user) => user.username);\n      return indexUsers(usersWithUsernames);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\nexport const getConversations = (currentUser) =>\n  axios\n    .get(`/api/users/current/conversations`)\n    .then((response) => {\n      return indexConversationsByCorrespondent(response.data, currentUser);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\nexport const setUsername = (userId, username) =>\n  axios\n    .put(`/api/users/current/set-username`, { _id: userId, username })\n    .then((response) => {\n      console.log(\"response: \", response);\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\nconst indexConversationsByCorrespondent = (conversations, currentUser) => {\n  const indexedConversations = {};\n  conversations.forEach((conversation) => {\n    indexedConversations[\n      conversation.users[0] !== currentUser\n        ? conversation.users[0]\n        : conversation.users[1]\n    ] = conversation;\n  });\n  return indexedConversations;\n};\n\nconst indexUsers = (users) => {\n  const indexedUsers = {};\n  users.forEach((user) => {\n    indexedUsers[user._id] = user;\n  });\n  return indexedUsers;\n};\n","import { parse } from \"url\";\nconst axios = require(\"axios\");\n\nconst RE_VIMEO = /^(?:\\/video|\\/channels\\/[\\w-]+|\\/groups\\/[\\w-]+\\/videos)?\\/(\\d+)$/;\nconst RE_YOUTUBE = /^(?:\\/embed)?\\/([\\w-]{10,12})$/;\n\nexport const getThumbnailURL = (url) => {\n  url = url || \"\";\n\n  const urlobj = parse(url, true);\n\n  // TODO support thumbnails for more video hosting\n\n  //youtube\n  if (\n    [\"www.youtube.com\", \"youtube.com\", \"youtu.be\"].indexOf(urlobj.host) !== -1\n  ) {\n    let video_id = null;\n    if (\"v\" in urlobj.query) {\n      if (urlobj.query.v && urlobj.query.v.match(/^[\\w-]{10,12}$/)) {\n        video_id = urlobj.query.v;\n      }\n    } else {\n      const match = RE_YOUTUBE.exec(urlobj.pathname);\n      if (match) {\n        video_id = match[1];\n      }\n    }\n\n    if (video_id) {\n      return `https://img.youtube.com/vi/${video_id}/hqdefault.jpg`;\n    }\n  }\n\n  //vimeo\n  if (\n    [\"www.vimeo.com\", \"vimeo.com\", \"player.vimeo.com\"].indexOf(urlobj.host) !==\n    -1\n  ) {\n    const match = RE_VIMEO.exec(urlobj.pathname);\n    if (match) {\n      const video_id = match[1];\n      return axios\n        .get(`https://vimeo.com/api/v2/video/${video_id}.json`)\n        .then((res) => {\n          return res.data[0].thumbnail_large;\n        })\n        .catch(function () {\n          return false;\n        });\n    }\n  }\n\n  return null;\n};\n","require(\"dotenv\").config();\n\nconst axios = require(\"axios\");\n\nexport const createPlaylist = (title, tracks) =>\n  axios\n    .post(`/api/playlists`, {\n      title,\n      tracks,\n    })\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error.response.data;\n    });\n\nexport const updatePlaylist = (playlistId, playlistUpdates) =>\n  axios\n    .put(`/api/playlists/${playlistId}`, playlistUpdates)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error.response.data;\n    });\n\nexport const deletePlaylist = (playlistId) =>\n  axios\n    .delete(`/api/playlists/${playlistId}`)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error.response.data;\n    });\n\nexport const getPlaylists = () =>\n  axios\n    .get(`/api/playlists`)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error.response.data;\n    });\n\nexport const getUserPlaylists = () =>\n  axios\n    .get(`/api/users/current/playlists`)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error.response.data;\n    });\n\nexport const getPlaylist = (playlistId) =>\n  axios\n    .get(`/api/playlists/${playlistId}`)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error.response.data;\n    });\n\nexport const getRecentPlaylists = () =>\n  axios\n    .get(`/api/playlists/recent`)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error.response.data;\n    });\n","import React, { useEffect, useState } from \"react\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\nimport { authService, messagingService, userService } from \"../../services\";\nimport { AuthInputs, PlaylistSearchBar, SideMenu } from \"..\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./header.scss\";\n\nfunction Header(props) {\n  const [showAuthInputs, setShowAuthInputs] = useState(false);\n  const [showRegisterInputs, setShowRegisterInputs] = useState(false);\n  const [temporaryMessage, setTemporaryMessage] = useState(\"\");\n  const [enterUsername, setEnterUsername] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    accomodateVerificationRedirect();\n  }, []);\n\n  const resetHeader = () => {\n    setShowRegisterInputs(false);\n    setShowAuthInputs(false);\n  };\n\n  const loginOrRegister = (input) => {\n    if (!showRegisterInputs) {\n      handleLogin(input);\n    } else {\n      handleRegister(input);\n    }\n  };\n\n  const handleLogin = (input) => {\n    const { email, password } = input;\n    authService.login(email, password).then((response) => {\n      if (response.status === 200) {\n        messagingService.disconnectSocket();\n        if (response.data.username) {\n          resetHeader();\n          welcome(response.data.username);\n        } else {\n          setEnterUsername(true);\n          displayTemporaryMessage(\"What should we call you?\");\n        }\n        props.loadUserData();\n      } else {\n        displayAuthResponse(response);\n      }\n    });\n  };\n\n  const handleRegister = (input) => {\n    const { email, password, passwordConfirm } = input;\n    passwordConfirm === password\n      ? authService.register(email, password).then((response) => {\n          displayAuthResponse(response);\n          response.status === 200 && resetHeader();\n        })\n      : displayTemporaryMessage(\"Passwords do not match!\");\n  };\n\n  const handleSetUsername = (username) => {\n    userService\n      .setUsername(props.currentUser._id, username)\n      .then((response) => {\n        if (response.status === 200) {\n          welcome(response.data.username);\n          setEnterUsername(false);\n          props.loadUserData();\n        } else {\n          displayAuthResponse(response);\n        }\n      });\n  };\n\n  const displayAuthResponse = (response) => {\n    const message = Object.values(response.data)[0].msg\n      ? Object.values(response.data)[0].msg\n      : response.data;\n    displayTemporaryMessage(message.toUpperCase());\n  };\n\n  const accomodateVerificationRedirect = () => {\n    const verified = new URLSearchParams(window.location.search).get(\n      \"verified\"\n    );\n    if (verified) {\n      displayTemporaryMessage(\"Account verified!\");\n      history.push(`/`);\n    }\n  };\n\n  const welcome = (username) => {\n    resetHeader();\n    displayTemporaryMessage(`Welcome, ${username}!`);\n  };\n\n  const displayTemporaryMessage = (message) => {\n    setTemporaryMessage(message);\n    setTimeout(() => {\n      setTemporaryMessage(null);\n    }, 2000);\n  };\n\n  return (\n    <div id=\"headerContainer\">\n      <div\n        id=\"header\"\n        className={`\n          ${temporaryMessage && \"color-animation\"}\n          ${!showAuthInputs && \"signed-in-header\"}\n        `}\n      >\n        {temporaryMessage && (\n          <Typography className={\"temporaryMessage\"} variant=\"h5\">\n            {temporaryMessage}\n          </Typography>\n        )}\n        {!temporaryMessage && props.loaded && (\n          <React.Fragment>\n            <div id=\"navButtonsContainer\">\n              {props.currentUser && props.currentUser.username ? (\n                <SideMenu\n                  id=\"sideMenuIconContainer\"\n                  loadUserData={props.loadUserData}\n                />\n              ) : (\n                <div id=\"loginButtonContainer\">\n                  {!showAuthInputs || showRegisterInputs ? (\n                    <Button\n                      id=\"loginButton\"\n                      onClick={() => {\n                        setShowAuthInputs(true);\n                        setShowRegisterInputs(false);\n                      }}\n                    >\n                      Login\n                    </Button>\n                  ) : (\n                    <Button\n                      id=\"registerButton\"\n                      onClick={() => setShowRegisterInputs(true)}\n                    >\n                      Click here to register\n                    </Button>\n                  )}\n                </div>\n              )}\n            </div>\n            {showAuthInputs && (\n              <AuthInputs\n                resetHeader={resetHeader}\n                loginOrRegister={loginOrRegister}\n                handleSetUsername={handleSetUsername}\n                enterUsername={enterUsername}\n                setEnterUsername={setEnterUsername}\n                showRegisterInputs={showRegisterInputs}\n              />\n            )}\n            {!showAuthInputs && (\n              <PlaylistSearchBar\n                playlists={props.playlists}\n                displayTemporaryMessage={displayTemporaryMessage}\n              />\n            )}\n            <div id=\"messaging-icon-column\">\n              <div id=\"messaging-icon-container\">\n                {props.currentUser && props.currentUser.username ? (\n                  <React.Fragment>\n                    {!props.messagingSidebarOpen ? (\n                      <ChatBubbleOutlineIcon\n                        id=\"messaging-icon-outline\"\n                        style={{\n                          fontSize: 40,\n                        }}\n                        onClick={props.toggleMessagingSidebar}\n                      ></ChatBubbleOutlineIcon>\n                    ) : (\n                      <ChatBubbleIcon\n                        id=\"messaging-icon-filled\"\n                        style={{ fontSize: 40 }}\n                        onClick={props.toggleMessagingSidebar}\n                      ></ChatBubbleIcon>\n                    )}\n                  </React.Fragment>\n                ) : (\n                  <React.Fragment>\n                    {!showAuthInputs && (\n                      <WhatshotIcon\n                        onClick={() => history.push(\"/\")}\n                        style={{ fontSize: 40 }}\n                      />\n                    )}\n                  </React.Fragment>\n                )}\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../header/header.scss\";\n\nexport default function PlaylistSearchBar(props) {\n  const history = useHistory();\n\n  return (\n    <div className=\"playlist-search-bar-container\">\n      <Autocomplete\n        size=\"small\"\n        className=\"playlist-search-bar\"\n        options={props.playlists || []}\n        onChange={(evt, playlist) => {\n          props.displayTemporaryMessage(`\\u266b ${playlist.title} \\u266b`);\n          history.push(`/playlist/${playlist._id}`);\n        }}\n        getOptionLabel={(option) => option.title}\n        renderInput={(params) => {\n          return (\n            <TextField\n              {...params}\n              InputProps={{\n                ...params.InputProps,\n                style: { color: \"#fff\" },\n              }}\n              label=\"Search for a playlist\"\n              variant=\"outlined\"\n            />\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport \"../header/header.scss\";\n\nfunction AuthInputs(props) {\n  const [authInput, setAuthInput] = useState({});\n  const emailInput = useRef(null);\n\n  const handleEnterPressed = (evt) => {\n    console.log(\"auth input : \", authInput);\n    if (evt.key === \"Enter\") {\n      loginRegisterOrSetUsername();\n    }\n  };\n\n  const loginRegisterOrSetUsername = () => {\n    !props.enterUsername\n      ? props.loginOrRegister(authInput)\n      : props.handleSetUsername(authInput.username);\n  };\n\n  useEffect(() => {\n    emailInput && emailInput.current.focus();\n  }, [props.showRegisterInputs]);\n\n  const authInputStyles = { border: \"1px solid white\", color: \"white\" };\n\n  return (\n    <div\n      id=\"authInputs\"\n      className={props.showRegisterInputs ? \"showRegisterInputs\" : \"\"}\n    >\n      <TextField\n        autoFocus\n        inputRef={emailInput}\n        value={authInput.username || authInput.email || \"\"}\n        className={`authInput emailInput ${\n          props.enterUsername && \"username-input\"\n        }`}\n        size=\"small\"\n        onChange={(evt) =>\n          !props.enterUsername\n            ? setAuthInput({ ...authInput, email: evt.target.value })\n            : setAuthInput({ ...authInput, username: evt.target.value })\n        }\n        onKeyDown={(evt) => handleEnterPressed(evt)}\n        variant=\"outlined\"\n        placeholder={!props.enterUsername ? \"Email\" : \"Username\"}\n        InputProps={{ style: authInputStyles }}\n      />\n      {!props.enterUsername && (\n        <TextField\n          type=\"password\"\n          value={authInput.password || \"\"}\n          className={\"authInput passwordInput\"}\n          size=\"small\"\n          onChange={(evt) =>\n            setAuthInput({ ...authInput, password: evt.target.value })\n          }\n          onKeyDown={(evt) => handleEnterPressed(evt)}\n          variant=\"outlined\"\n          placeholder=\"Password\"\n          InputProps={{ style: authInputStyles }}\n        />\n      )}\n      {props.showRegisterInputs && (\n        <TextField\n          type=\"password\"\n          value={authInput.passwordConfirm || \"\"}\n          className={\"authInput confirmPasswordInput\"}\n          size=\"small\"\n          onChange={(evt) =>\n            setAuthInput({\n              ...authInput,\n              passwordConfirm: evt.target.value,\n            })\n          }\n          onKeyDown={(evt) => handleEnterPressed(evt)}\n          variant=\"outlined\"\n          placeholder=\"Confirm Password\"\n          InputProps={{ style: authInputStyles }}\n        />\n      )}\n\n      <div\n        className={\n          props.showRegisterInputs\n            ? \"loginSubmitContainerRegister\"\n            : \"loginSubmitContainer\"\n        }\n      >\n        <Button\n          onClick={() => loginRegisterOrSetUsername(authInput)}\n          variant=\"outlined\"\n          className={\"submit\"}\n        >\n          <ChevronRightIcon fontSize=\"large\" />\n        </Button>\n        <Button\n          onClick={() => props.resetHeader() && setAuthInput({})}\n          variant=\"outlined\"\n          className={\"close\"}\n        >\n          <CloseIcon fontSize=\"default\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default AuthInputs;\n","import React, { useState, useEffect } from \"react\";\nimport \"./messaging.scss\";\nimport { Conversations, Chat } from \"../\";\nimport { userService, messagingService } from \"../../services\";\n\nrequire(\"dotenv\").config();\n\nexport default function Messaging(props) {\n  const [correspondent, setCorrespondent] = useState(null);\n  const [conversations, setConversations] = useState({});\n  const [latestMessage, setLatestMessage] = useState();\n  const [newMessageCount, incrementNewMessageCount] = useState(0);\n  const [fetchCount, incrementFetchCount] = useState(0);\n\n  useEffect(() => {\n    if (props.currentUser) {\n      userService\n        .getConversations(props.currentUser._id)\n        .then((conversations) => {\n          setConversations(conversations);\n          props.socket.on(\"message\", function (data) {\n            setLatestMessage(data);\n          });\n        });\n    }\n  }, [props.socket]);\n\n  useEffect(() => {\n    if (latestMessage) {\n      setConversations(\n        messagingService.updateConversations(latestMessage, conversations)\n      );\n      incrementNewMessageCount(newMessageCount + 1);\n    }\n  }, [latestMessage]);\n\n  const getMessages = () => {\n    messagingService\n      .fetchMoreMessages(conversations, correspondent._id)\n      .then((updatedConversations) => {\n        setConversations(updatedConversations);\n        incrementFetchCount(fetchCount + 1);\n      });\n  };\n\n  return (\n    <div\n      className={\n        props.messagingSidebarOpen\n          ? \"visible messaging-container\"\n          : \"hidden messaging-container\"\n      }\n    >\n      {!correspondent && (\n        <Conversations\n          users={props.users}\n          currentUser={props.currentUser}\n          conversations={conversations}\n          setCorrespondent={setCorrespondent}\n        />\n      )}\n      {correspondent && (\n        <Chat\n          messages={\n            conversations[correspondent._id]\n              ? [...conversations[correspondent._id].messages]\n              : []\n          }\n          fetchCount={fetchCount}\n          newMessageCount={newMessageCount}\n          correspondent={correspondent}\n          getMessages={getMessages}\n          setCorrespondent={setCorrespondent}\n        />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./conversations.scss\";\nimport { TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ConversationSnippet } from \"..\";\n\nrequire(\"dotenv\").config();\n\nexport default function Conversations(props) {\n  const users = props.users\n    ? delete props.users[props.currentUser._id] && Object.values(props.users)\n    : [];\n\n  return (\n    <div id=\"conversationsContainer\">\n      <div id=\"searchContainer\">\n        <Autocomplete\n          id=\"users-list\"\n          className=\"users-list-autocomplete\"\n          options={users}\n          onChange={(evt, correspondent) => {\n            props.setCorrespondent(correspondent);\n          }}\n          getOptionLabel={(option) => option.username}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              InputLabelProps={{\n                style: { color: \"#fff\" },\n              }}\n              placeholder=\"Search for a user\"\n              label=\"Search for a user\"\n              variant=\"outlined\"\n            />\n          )}\n        />\n      </div>\n      <div id=\"conversation-snippets-container\">\n        {props.conversations &&\n          Object.keys(props.conversations).map((correspondent) => (\n            <div\n              key={`conversation${props.conversations[correspondent]._id}`}\n              className={\"conversation-snippet-container\"}\n              onClick={(evt) => {\n                props.setCorrespondent(props.users[correspondent]);\n              }}\n            >\n              <ConversationSnippet\n                currentUser={props.currentUser}\n                correspondent={props.users[correspondent]}\n                message={props.conversations[correspondent].messages[0]}\n              />\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./conversation-snippet.scss\";\n\nrequire(\"dotenv\").config();\n\nexport default function Conversations(props) {\n  return (\n    <div className=\"conversation-snippet\">\n      <p>\n        <b>{props.correspondent && props.correspondent.username}</b>\n      </p>\n      <p>{props.message.contents}</p>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuOpenIcon from \"@material-ui/icons/MenuOpen\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\nimport { authService, messagingService } from \"../../services\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./side-menu.scss\";\n\nexport default function SideMenu(props) {\n  const history = useHistory();\n\n  const [state, setState] = React.useState({\n    sideMenu: false,\n  });\n\n  const toggleSideMenu = (sideMenu, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [sideMenu]: open });\n  };\n\n  const handleLogout = () => {\n    authService.logout().then(() => {\n      messagingService.disconnectSocket();\n      props.loadUserData();\n      history.push(\"/\");\n    });\n  };\n\n  const list = (anchor) => (\n    <div\n      role=\"presentation\"\n      onClick={toggleSideMenu(anchor, false)}\n      onKeyDown={toggleSideMenu(anchor, false)}\n    >\n      <List>\n        <ListItem onClick={() => history.push(`/`)} button key={\"hotPlaylists\"}>\n          <ListItemIcon>\n            <WhatshotIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"Hot Playlists\"} />\n        </ListItem>\n        <ListItem\n          onClick={() => history.push(`/my-playlists`)}\n          button\n          key={\"playlists\"}\n        >\n          <ListItemIcon>\n            <LibraryMusicIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"My Playlists\"} />\n        </ListItem>\n        <ListItem\n          onClick={() => history.push(`/playlist-create`)}\n          button\n          key={\"newPlaylist\"}\n        >\n          <ListItemIcon>\n            <AddCircleOutlineIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"New Playlist\"} />\n        </ListItem>\n        <ListItem onClick={handleLogout} button key={\"logout\"}>\n          <ListItemIcon>\n            <ExitToAppIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"Logout\"} />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <React.Fragment key={\"sideMenu\"}>\n        <Button\n          style={{ height: \"100%\" }}\n          onClick={toggleSideMenu(\"sideMenu\", true)}\n        >\n          {!state.sideMenu ? (\n            <MenuIcon style={{ fontSize: \"40px\", color: \"white\" }} />\n          ) : (\n            <MenuOpenIcon style={{ fontSize: \"40px\", color: \"white\" }} />\n          )}\n        </Button>\n        <Drawer\n          anchor={\"left\"}\n          open={state[\"sideMenu\"]}\n          onClose={toggleSideMenu(\"sideMenu\", false)}\n        >\n          {list(\"sideMenu\")}\n        </Drawer>\n      </React.Fragment>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { playlistService, messagingService } from \"../../services\";\nimport { Player, GroupChat } from \"..\";\nimport { useHistory } from \"react-router-dom\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport \"./playlist.scss\";\n\nrequire(\"dotenv\").config();\n\nexport default function Playlist(props) {\n  const [playerReady, setPlayerReady] = useState(false);\n  const [username, setUsername] = useState(null);\n  const [playlist, setPlaylist] = useState(null);\n  const [latestMessage, setLatestMessage] = useState(null);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [recentGroup, setRecentGroup] = useState(null);\n  const history = useHistory();\n  const group = props.match.params.id;\n\n  useEffect(() => {\n    return () => props.socket && messagingService.leaveGroup(group);\n  }, []);\n\n  useEffect(() => {\n    setNewPlaylist();\n  }, [props.match.params.id]);\n\n  useEffect(() => {\n    initializeChat();\n  }, [props.socket]);\n\n  const setNewPlaylist = () => {\n    const urlParam = new URLSearchParams(window.location.search).get(\"track\");\n    const track = urlParam ? urlParam - 1 : 0;\n    setCurrentTrackIndex(track);\n    playlistService.getPlaylist(props.match.params.id).then((playlist) => {\n      setPlaylist(playlist);\n      initializeChat();\n      history.push(`/playlist/${playlist._id}`);\n    });\n  };\n\n  const initializeChat = () => {\n    setUsername(messagingService.getUsername(props.currentUser));\n    props.socket.emit(\"join-group\", group, recentGroup);\n    setRecentGroup(group);\n    props.socket.on(\"group-message\", function (data) {\n      setLatestMessage(data);\n    });\n  };\n\n  const trackBack = () => {\n    currentTrackIndex - 1 >= 0 && setCurrentTrackIndex(currentTrackIndex - 1);\n  };\n\n  const trackForward = () => {\n    currentTrackIndex + 1 <= playlist.tracks.length - 1 &&\n      setCurrentTrackIndex(currentTrackIndex + 1);\n  };\n\n  return (\n    <div className=\"playlist-container\">\n      <div className=\"playlist\">\n        {playerReady && (\n          <button className=\"back-button\">\n            <ChevronLeftIcon onClick={trackBack} style={{ fontSize: 45 }} />\n          </button>\n        )}\n        {playlist && (\n          <Player\n            currentTrack={\n              playlist.tracks[currentTrackIndex] &&\n              playlist.tracks[currentTrackIndex].url\n            }\n            trackForward={trackForward}\n            setPlayerReady={setPlayerReady}\n          />\n        )}\n        {playerReady && (\n          <button className=\"forward-button\">\n            {\" \"}\n            <ChevronRightIcon onClick={trackForward} style={{ fontSize: 45 }} />\n          </button>\n        )}\n      </div>\n      {playerReady && (\n        <GroupChat\n          currentUser={props.currentUser}\n          username={username}\n          latestMessage={latestMessage}\n          group={group}\n        />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactPlayer from \"react-player\";\nimport \"./player.scss\";\n\nrequire(\"dotenv\").config();\n\nexport default function Player(props) {\n  const isFacebookUrl = /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?facebook\\.com\\/[a-zA-Z0-9\\.]+\\/videos\\/(?:[a-zA-Z0-9\\.]+\\/)?([0-9]+)/.test(\n    props.currentTrack\n  );\n\n  return (\n    <div className=\"player-wrapper\">\n      {props.currentTrack ? (\n        <ReactPlayer\n          className={!isFacebookUrl ? \"react-player\" : \"facebook-react-player\"}\n          url={props.currentTrack}\n          width={!isFacebookUrl ? \"100%\" : \"calc(50% - 46px)\"}\n          height={\"100%\"}\n          controls={true}\n          onEnded={props.trackForward}\n          playing={true}\n          onReady={() => props.setPlayerReady(true)}\n        />\n      ) : (\n        <h2 style={{ color: \"white\", margin: \"auto\", textAlign: \"center\" }}>\n          No Playlist Selected\n        </h2>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { useHistory } from \"react-router-dom\";\nimport { playlistService, thumbnailService } from \"../../services\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { SortableGrid } from \"..\";\n\nimport \"./playlist-create.scss\";\n\nrequire(\"dotenv\").config();\n\nexport default function Playlist(props) {\n  const [tracks, setTracks] = useState([]);\n  const [title, setTitle] = useState(null);\n  const [errors, setErrors] = useState({ title: null, tracks: null });\n  const [trackToAdd, setTrackToAdd] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    props.edit &&\n      playlistService.getPlaylist(props.match.params.id).then((playlist) => {\n        setTracks(playlist.tracks);\n        setTitle(playlist.title);\n      });\n  }, []);\n\n  const saveChanges = () => {\n    playlistService\n      .updatePlaylist(props.match.params.id, { title, tracks })\n      .then((playlist) => {\n        playlist.errors\n          ? setErrors(playlist.errors)\n          : history.push(\"/my-playlists\");\n      });\n  };\n\n  const createPlaylist = (evt) => {\n    evt.preventDefault();\n    if (tracks.length > 0) {\n      playlistService.createPlaylist(title, tracks).then((playlist) => {\n        playlist.errors\n          ? setErrors(playlist.errors)\n          : playlist && history.push(`/playlist/${playlist._id}`);\n      });\n    } else {\n      setErrors({ tracks: \"Add some tracks!\" });\n    }\n  };\n\n  const addTrack = async (evt) => {\n    evt.preventDefault();\n    if (ReactPlayer.canPlay(trackToAdd)) {\n      const thumbnailUrl = await thumbnailService.getThumbnailURL(trackToAdd);\n      setTracks([...tracks, { url: trackToAdd, thumbnailUrl }]);\n      setTrackToAdd(\"\");\n      errors.tracks && setErrors({ tracks: null });\n    } else {\n      setErrors({ tracks: \"Cannot add track\" });\n    }\n  };\n\n  const deleteTrack = (index) => {\n    tracks.splice(index, 1) && setTracks([...tracks]);\n  };\n\n  return (\n    <div className=\"playlist-create-container\">\n      <div className=\"playlist-create-inputs-container\">\n        <div\n          className={`input-container playlist-create-input-container ${\n            props.edit && \"edit-inputs-container\"\n          }`}\n        >\n          <TextField\n            onKeyDown={(evt) => evt.key === \"Enter\" && addTrack(evt)}\n            placeholder=\"Paste link to media here\"\n            value={trackToAdd || \"\"}\n            error={errors.tracks}\n            className=\"message-input\"\n            onChange={(evt) => setTrackToAdd(evt.target.value)}\n            autoFocus\n            InputProps={{\n              style: { color: \"#fff\" },\n            }}\n          />\n          <Button\n            className=\"standard-submit-button\"\n            onClick={(evt) => addTrack(evt)}\n            variant=\"contained\"\n          >\n            Add Track\n          </Button>\n        </div>\n        <div\n          className={`input-container playlist-create-input-container ${\n            props.edit && \"edit-inputs-container\"\n          }`}\n        >\n          <TextField\n            onKeyDown={(evt) => evt.key === \"Enter\" && createPlaylist(evt)}\n            placeholder={!props.edit && \"Enter your playlist title here\"}\n            error={errors.title}\n            value={title || \"\"}\n            className=\"message-input\"\n            onChange={(evt) => setTitle(evt.target.value)}\n            InputProps={{\n              style: { color: \"#fff\" },\n            }}\n          />\n          <Button\n            className=\"standard-submit-button\"\n            onClick={(evt) => {\n              props.edit ? saveChanges() : createPlaylist(evt);\n            }}\n            variant=\"contained\"\n          >\n            {!props.edit ? \"Create\" : \"Save Changes\"}\n          </Button>\n        </div>\n      </div>\n      {tracks && (\n        <SortableGrid\n          tracks={tracks}\n          setTracks={setTracks}\n          deleteTrack={deleteTrack}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { playlistService } from \"../../services\";\nimport { GeneralModal } from \"..\";\nimport Button from \"@material-ui/core/Button\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport DefaultThumbnail from \"../../assets/cassette.gif\";\nimport \"./playlists.scss\";\n\nexport default function Playlists(props) {\n  const [playlists, setPlaylists] = useState([]);\n  const [playlistToDelete, setPlaylistToDelete] = useState(null);\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    props.socket ? getActivePlaylists() : getPlaylists();\n  }, [props.socket]);\n\n  const play = (playlist, track) => {\n    if (track) {\n      history.push(`/playlist/${playlist._id}?track=${track}`);\n    } else {\n      history.push(`/playlist/${playlist._id}`);\n    }\n  };\n\n  const edit = (playlist) => {\n    history.push(`/playlist-edit/${playlist._id}`);\n  };\n\n  const openDeleteModal = (playlist) => {\n    setPlaylistToDelete(playlist);\n    setDeleteModalOpen(true);\n  };\n\n  const closeDeleteModal = () => {\n    setPlaylistToDelete(null);\n    setDeleteModalOpen(false);\n  };\n\n  const deletePlaylist = (playlist) => {\n    // consider making optimistic update in future...maybe index playlists on arrival for easy delete?\n    playlistService.deletePlaylist(playlist._id).then(() => {\n      getPlaylists();\n      closeDeleteModal();\n    });\n    setPlaylistToDelete(null);\n  };\n\n  const getPlaylists = () => {\n    playlistService.getUserPlaylists().then((playlists) => {\n      setPlaylists(playlists);\n    });\n  };\n\n  const getActivePlaylists = () => {\n    props.socket.on(\"get-active-playlists\", function (data) {\n      const uniquePlaylists = [\n        ...new Map(data.map((playlist) => [playlist._id, playlist])).values(),\n      ];\n      setPlaylists([...uniquePlaylists]);\n    });\n    props.socket.emit(\"get-active-playlists\", true);\n  };\n\n  return (\n    <div className=\"my-playlists-container\">\n      {playlists &&\n        playlists.map((playlist, index) => (\n          <div key={`playlist${index}`} className=\"playlist\">\n            <div className=\"playlist-head\">\n              <div\n                className={`playlist-title-container ${\n                  props.socket && \"hot color-animation\"\n                }`}\n              >\n                <h2>{playlist.title}</h2>\n              </div>\n              <div className=\"playlist-functions-container\">\n                <Button\n                  className={`playlist-play-button standard-submit-button`}\n                  variant=\"contained\"\n                  style={{ gridColumn: props.socket && \"1 / span 2\" }}\n                  onClick={() => play(playlist)}\n                >\n                  Play\n                </Button>\n                {!props.socket && (\n                  <Button\n                    className=\"playlist-edit-button standard-submit-button\"\n                    variant=\"contained\"\n                    onClick={() => edit(playlist)}\n                  >\n                    Edit\n                  </Button>\n                )}\n              </div>\n            </div>\n            <div className=\"playlist-body\">\n              {playlist.tracks.map((track, index) => (\n                <div\n                  onClick={() => play(playlist, index + 1)}\n                  key={`track${index}`}\n                  className=\"my-playlists-thumbnail\"\n                >\n                  <img\n                    src={\n                      track.thumbnailUrl ? track.thumbnailUrl : DefaultThumbnail\n                    }\n                    className=\"track-preview\"\n                  />\n                </div>\n              ))}\n            </div>\n            {!props.socket && (\n              <Button\n                className=\"delete-playlist-button\"\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                onClick={() => openDeleteModal(playlist)}\n              >\n                <ClearIcon fontSize=\"small\" />\n              </Button>\n            )}\n          </div>\n        ))}\n      {!playlists[0] && (\n        <div className=\"no-playlists\">\n          <h2>No playlists here!</h2>\n        </div>\n      )}\n      <GeneralModal\n        action={deletePlaylist}\n        open={deleteModalOpen}\n        handleClose={closeDeleteModal}\n        item={playlistToDelete && playlistToDelete}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { sortableContainer, sortableElement } from \"react-sortable-hoc\";\nimport arrayMove from \"array-move\";\nimport { TrackThumbnail } from \"../../components\";\nimport \"./sortable-grid.scss\";\nimport \"../player/player.scss\";\n\nexport default function SortableGrid(props) {\n  const SortableItem = sortableElement(({ i, track }) => {\n    return (\n      <TrackThumbnail\n        thumbnailUrl={track.thumbnailUrl}\n        deleteTrack={props.deleteTrack}\n        index={i}\n        className=\"sortable-item\"\n      />\n    );\n  });\n\n  const SortableContainer = sortableContainer(({ children }) => {\n    return <div className=\"sortable-container\">{children}</div>;\n  });\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    const previousTracks = props.tracks;\n    props.setTracks(arrayMove(previousTracks, oldIndex, newIndex));\n  };\n\n  return (\n    <SortableContainer axis=\"xy\" onSortEnd={onSortEnd}>\n      {props.tracks.map((track, index) => (\n        <SortableItem\n          key={`item-${index}`}\n          index={index}\n          i={index}\n          track={track}\n        />\n      ))}\n    </SortableContainer>\n  );\n}\n","import React, { useState } from \"react\";\nimport DefaultThumbnail from \"../../assets/cassette.gif\";\nimport \"./track-thumbnail.scss\";\n\nexport default function TrackThumbnail(props) {\n  const [hovered, setHovered] = useState(false);\n\n  return (\n    <div\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      className=\"sortable-item\"\n    >\n      {/* thumbnail */}\n      <img\n        src={props.thumbnailUrl ? props.thumbnailUrl : DefaultThumbnail}\n        className={`track-preview \n          ${hovered && \"low-opacity\"}`}\n      />\n      {/* desktop delete button */}\n      {hovered && (\n        <button\n          onClick={() => props.deleteTrack(props.index)}\n          className=\"track-remove-button\"\n        >\n          DELETE\n        </button>\n      )}\n      {/* mobile delete button */}\n      <button\n        onClick={() => props.deleteTrack(props.index)}\n        className=\"track-remove-button-mobile\"\n      >\n        DELETE\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { messagingService } from \"../../services\";\nimport \"./group-chat.scss\";\nimport \"../chat/chat.scss\";\n\nrequire(\"dotenv\").config();\n\nexport default function GroupChat(props) {\n  const [messages, setMessages] = useState([]);\n  const [messagesSent, setMessagesSent] = useState(0);\n  const [messageToSend, setMessageToSend] = useState(\"\");\n  const endOfChat = useRef(null);\n\n  useEffect(() => {\n    setMessages([]);\n  }, [props.group]);\n\n  const throttleMessages = () => {\n    if (messagesSent === 0) {\n      setTimeout(() => {\n        setMessagesSent(0);\n      }, 5000);\n    }\n    setMessagesSent(messagesSent + 1);\n  };\n\n  useEffect(() => {\n    props.latestMessage && setMessages([props.latestMessage, ...messages]);\n  }, [props.latestMessage]);\n\n  const sendMessage = (evt, messageToSend) => {\n    if (messageToSend.length > 0 && messagesSent < 3) {\n      throttleMessages();\n      messagingService.sendGroupMessage(\n        evt,\n        messageToSend,\n        {\n          _id: props.currentUser ? props.currentUser._id : \"\",\n          username: props.username,\n        },\n        props.group\n      ) && setMessageToSend(\"\");\n    }\n  };\n\n  return (\n    <div className=\"group-chat\">\n      <div id=\"groupMessagesContainer\" className=\"messages-container\">\n        {messages.map((message, index) => (\n          <div className=\"message\" key={`message${index}`}>\n            <p className=\"message-sender\">{message.correspondent.username}</p>\n            <p className=\"group-message-content\">{message.message}</p>\n          </div>\n        ))}\n        <div ref={endOfChat}></div>\n      </div>\n      <div id=\"groupChatFooter\">\n        <div className=\"input-container\">\n          <TextField\n            onKeyDown={(evt) =>\n              evt.key === \"Enter\" && sendMessage(evt, messageToSend)\n            }\n            placeholder=\"Send a message\"\n            value={messageToSend}\n            className=\"message-input\"\n            onChange={(evt) => setMessageToSend(evt.target.value)}\n            InputProps={{\n              style: { color: \"#fff\" },\n            }}\n          />\n          <Button\n            className=\"standard-submit-button\"\n            onClick={(evt) => sendMessage(evt, messageToSend)}\n            variant=\"contained\"\n          >\n            Send\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\nimport { messagingService } from \"../../services\";\nimport \"./chat.scss\";\n\nrequire(\"dotenv\").config();\n\nexport default function Chat(props) {\n  const [messageToSend, setMessageToSend] = useState(\"\");\n  const endOfChat = useRef(null);\n  const scrollPosition = useRef(null);\n\n  const sendMessage = (evt, messageToSend) => {\n    messagingService.sendPrivateMessage(\n      evt,\n      messageToSend,\n      props.correspondent._id\n    ) && setMessageToSend(\"\");\n  };\n\n  const displayMessages = () => {\n    const messages = [];\n    for (let i = props.messages.length - 1; i >= 0; i--) {\n      messages.push(\n        <div\n          key={`message${props.messages[i]._id}${i}`}\n          className={\n            props.messages[i].sender === props.correspondent._id\n              ? \"their-message\"\n              : \"my-message\"\n          }\n        >\n          <div className={\"message\"}>{props.messages[i].contents}</div>\n        </div>\n      );\n\n      if (i === props.messages.length - 30)\n        messages.push(<div key=\"scrollPosition\" ref={scrollPosition}></div>);\n    }\n    return messages;\n  };\n\n  useEffect(() => {\n    props.fetchCount > 0 && scrollPosition.current.scrollIntoView();\n  }, [props.fetchCount]);\n\n  useEffect(() => {\n    endOfChat.current.scrollIntoView();\n  }, [props.newMessageCount]);\n\n  return (\n    <div id=\"chatContainer\">\n      <div id=\"chatHeaderContainer\">\n        <KeyboardBackspaceIcon\n          id=\"backArrow\"\n          onClick={() => props.setCorrespondent(null)}\n          style={{ fontSize: 40 }}\n        />\n        <h2 id=\"chatHeader\">{props.correspondent.username}</h2>\n      </div>\n      <div\n        className=\"messagesContainer\"\n        onScroll={(evt) => evt.target.scrollTop === 0 && props.getMessages()}\n      >\n        {displayMessages()}\n        <div ref={endOfChat}></div>\n      </div>\n      <div className=\"chatFooter\">\n        <div className=\"input-container\">\n          <TextField\n            onKeyDown={(evt) =>\n              evt.key === \"Enter\" && sendMessage(evt, messageToSend)\n            }\n            placeholder=\"Send a message\"\n            value={messageToSend}\n            className=\"message-input\"\n            onChange={(evt) => setMessageToSend(evt.target.value)}\n            InputProps={{\n              style: { color: \"#fff\" },\n            }}\n            multiline\n          />\n          <Button\n            className=\"standard-submit-button\"\n            onClick={(evt) => sendMessage(evt, messageToSend)}\n            variant=\"contained\"\n          >\n            Send\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    color: \"#fff\",\n    width: 260,\n    backgroundColor: \"black\",\n    border: \"1px solid #f50057\",\n    borderRadius: \"10px\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    textAlign: \"center\",\n  },\n}));\n\nexport default function GeneralModal(props) {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Delete {props.item && props.item.title}?</h2>\n      <Button\n        onClick={() => props.action(props.item)}\n        variant=\"outlined\"\n        color=\"secondary\"\n      >\n        DELETE\n      </Button>\n      <GeneralModal />\n    </div>\n  );\n\n  return (\n    <Modal\n      id=\"generalModal\"\n      open={props.open}\n      onClose={props.handleClose}\n      aria-labelledby=\"simple-modal-title\"\n    >\n      {body}\n    </Modal>\n  );\n}\n","import { createMuiTheme } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fff\",\n    },\n  },\n});\n\nexport { theme };\n","import React, { useState, useEffect } from \"react\";\nimport { useToggle } from \"./hooks\";\nimport {\n  Playlist,\n  Playlists,\n  PlaylistCreate,\n  Messaging,\n  Header,\n} from \"./components\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { messagingService, userService, playlistService } from \"./services\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { theme } from \"./material-overrides/header\";\nimport \"./App.scss\";\n\nexport default function App() {\n  const [messagingSidebarStatus, setMessagingSidebarStatus] = useToggle();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [users, setUsers] = useState({});\n  const [socket, setSocket] = useState(null);\n  const [recentPlaylists, setRecentPlaylists] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  // load 1000 most popular and 1000 most recent playlists. Search bar will use these.\n  // in addition, will display most recent and most popular on home page\n\n  useEffect(() => {\n    loadRecentPlaylists();\n    loadUserData();\n  }, []);\n\n  const loadUserData = () => {\n    userService.getCurrentUser().then((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setAnonymousUser();\n      }\n      setLoaded(true);\n    });\n  };\n\n  const setAnonymousUser = () => {\n    setCurrentUser(null);\n    setSocket(messagingService.connectSocket());\n  };\n\n  const setUser = (user) => {\n    setCurrentUser(user);\n    setSocket(messagingService.authenticateSocket());\n    userService.getUsers().then((users) => {\n      setUsers(users);\n    });\n  };\n\n  const loadRecentPlaylists = () => {\n    playlistService.getRecentPlaylists().then((playlists) => {\n      setRecentPlaylists(playlists);\n    });\n  };\n\n  return (\n    <HelmetProvider>\n      <div id=\"app\">\n        <Helmet>\n          <meta\n            name=\"viewport\"\n            content=\"minimum-scale=1, initial-scale=1, width=device-width\"\n          />\n        </Helmet>\n        <ThemeProvider theme={theme}>\n          <Router>\n            <Header\n              messagingSidebarOpen={messagingSidebarStatus}\n              toggleMessagingSidebar={setMessagingSidebarStatus}\n              playlists={recentPlaylists}\n              loaded={loaded}\n              loadUserData={loadUserData}\n              currentUser={currentUser}\n            ></Header>\n            <div id=\"main-section-container\">\n              <div\n                id=\"main-section\"\n                className={\n                  messagingSidebarStatus ? \"mobile-main-section\" : undefined\n                }\n              >\n                <Switch>\n                  <Route\n                    path=\"/my-playlists\"\n                    render={() => <Playlists />}\n                  ></Route>\n                  <Route\n                    path=\"/playlist/:id\"\n                    render={(props) =>\n                      socket && (\n                        <Playlist\n                          {...props}\n                          currentUser={currentUser}\n                          socket={socket}\n                        />\n                      )\n                    }\n                  ></Route>\n                  <Route\n                    path=\"/playlist-edit/:id\"\n                    render={(props) =>\n                      currentUser && <PlaylistCreate {...props} edit={true} />\n                    }\n                  ></Route>\n                  <Route\n                    path=\"/playlist-create\"\n                    render={() => <PlaylistCreate edit={false} />}\n                  ></Route>\n                  <Route\n                    path=\"/\"\n                    render={() => socket && <Playlists socket={socket} />}\n                  ></Route>\n                </Switch>\n              </div>\n              {socket && currentUser && (\n                <Messaging\n                  users={users}\n                  socket={socket}\n                  currentUser={currentUser}\n                  messagingSidebarOpen={messagingSidebarStatus}\n                />\n              )}\n            </div>\n          </Router>\n        </ThemeProvider>\n      </div>\n    </HelmetProvider>\n  );\n}\n","import React from \"react\";\nexport default function useToggle(initialValue = false) {\n  const [value, setValue] = React.useState(initialValue);\n  const toggle = React.useCallback(() => {\n    setValue((value) => !value);\n  }, []);\n  return [value, toggle];\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cassette.f720df37.gif\";"],"sourceRoot":""}
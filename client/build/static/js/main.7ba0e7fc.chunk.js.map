{"version":3,"sources":["services/messaging-service.js","services/auth-service.js","services/user-service.js","services/thumbnail-service.js","services/playlist-service.js","components/header/header.js","components/playlist-search-bar/playlist-search-bar.js","components/auth-inputs/authInputs.js","components/messaging/messaging.js","components/conversations/conversations.js","components/conversation-snippet/conversation-snippet.js","components/side-menu/side-menu.js","components/playlist/playlist.js","components/player/player.js","components/playlist-create/playlist-create.js","components/playlists/playlists.js","components/sortable-grid/sortable-grid.js","components/track-thumbnail/track-thumbnail.js","components/group-chat/group-chat.js","components/chat/chat.js","components/general-modal/general-modal.js","material-overrides/header.js","App.js","hooks/useToggle.js","serviceWorker.js","index.js","assets/cassette.gif"],"names":["socket","axios","require","logout","post","then","catch","login","email","password","response","error","register","connectSocket","io","connect","window","location","hostname","console","log","process","authenticateSocket","on","emit","msg","JSON","stringify","data","fetchMoreMessages","conversations","correspondent_id","get","_id","messages","length","addMessages","updatedMessages","concat","updatedConversations","sendPrivateMessage","evt","messageToSend","preventDefault","reciever_id","contents","sendGroupMessage","correspondent","group","leaveGroup","disconnectSocket","close","updateConversations","latestMessage","newConversation","unshift","message","config","getCurrentUser","getUsers","usersWithUsernames","filter","user","username","indexUsers","getConversations","currentUser","indexConversationsByCorrespondent","setUsername","userId","put","indexedConversations","forEach","conversation","users","indexedUsers","RE_VIMEO","RE_YOUTUBE","getThumbnailURL","url","urlobj","parse","indexOf","host","video_id","query","v","match","exec","pathname","res","thumbnail_large","createPlaylist","title","tracks","updatePlaylist","playlistId","playlistUpdates","deletePlaylist","delete","getPlaylists","getUserPlaylists","getPlaylist","getRecentPlaylists","Header","props","useState","showAuthInputs","setShowAuthInputs","showRegisterInputs","setShowRegisterInputs","temporaryMessage","setTemporaryMessage","enterUsername","setEnterUsername","history","useHistory","resetHeader","welcome","displayTemporaryMessage","displayAuthResponse","Object","values","toUpperCase","setTimeout","id","className","Typography","variant","loaded","Fragment","SideMenu","loadUserData","Button","onClick","loginOrRegister","input","passwordConfirm","authService","status","handleRegister","messagingService","handleLogin","handleSetUsername","userService","PlaylistSearchBar","playlists","toggleMessagingSidebar","messagingSidebarOpen","style","fontSize","push","Autocomplete","size","options","onChange","playlist","getOptionLabel","option","renderInput","params","TextField","InputProps","color","label","AuthInputs","authInput","setAuthInput","emailInput","useRef","handleEnterPressed","key","loginRegisterOrSetUsername","useEffect","current","focus","authInputStyles","border","autoFocus","inputRef","value","target","onKeyDown","placeholder","type","Messaging","setCorrespondent","setConversations","setLatestMessage","newMessageCount","incrementNewMessageCount","fetchCount","incrementFetchCount","Conversations","Chat","getMessages","InputLabelProps","keys","map","anchor","React","sideMenu","state","setState","toggleSideMenu","open","event","handleLogout","height","Drawer","onClose","role","List","ListItem","button","ListItemIcon","ListItemText","primary","Playlist","playerReady","setPlayerReady","setPlaylist","currentTrackIndex","setCurrentTrackIndex","recentGroup","setRecentGroup","setNewPlaylist","initializeChat","urlParam","URLSearchParams","search","playlistService","trackForward","Player","currentTrack","GroupChat","isFacebookUrl","test","width","controls","onEnded","playing","onReady","margin","textAlign","setTracks","setTitle","errors","setErrors","trackToAdd","setTrackToAdd","edit","addTrack","a","ReactPlayer","canPlay","thumbnailService","thumbnailUrl","SortableGrid","deleteTrack","index","splice","Playlists","setPlaylists","playlistToDelete","setPlaylistToDelete","deleteModalOpen","setDeleteModalOpen","getActivePlaylists","play","track","closeDeleteModal","gridColumn","src","DefaultThumbnail","openDeleteModal","GeneralModal","action","handleClose","item","SortableItem","sortableElement","i","TrackThumbnail","SortableContainer","sortableContainer","children","axis","onSortEnd","oldIndex","newIndex","previousTracks","arrayMove","hovered","setHovered","onMouseEnter","onMouseLeave","setMessages","messagesSent","setMessagesSent","setMessageToSend","endOfChat","sendMessage","ref","scrollPosition","scrollIntoView","onScroll","scrollTop","sender","displayMessages","multiline","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","backgroundColor","borderRadius","boxShadow","shadows","padding","spacing","classes","modalStyle","body","Modal","aria-labelledby","createMuiTheme","palette","main","App","initialValue","setValue","toggle","useCallback","useToggle","messagingSidebarStatus","setMessagingSidebarStatus","setCurrentUser","setUsers","setSocket","recentPlaylists","setRecentPlaylists","setLoaded","loadRecentPlaylists","setUser","setAnonymousUser","name","content","ThemeProvider","undefined","path","render","Boolean","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"4oDAGIA,E,oCCHEC,EAAQC,EAAQ,IAETC,EAAS,kBACpBF,EACGG,KAAK,oBACLC,MAAK,WACJ,OAAO,KAERC,OAAM,WACL,OAAO,MAGAC,EAAQ,SAACC,EAAOC,GAAR,OACnBR,EACGG,KADH,kBAC2B,CACvBI,QACAC,aAEDJ,MAAK,SAAUK,GACd,OAAOA,KAERJ,OAAM,SAAUK,GACf,OAAOA,EAAMD,aAGNE,EAAW,SAACJ,EAAOC,GAAR,OACtBR,EACGG,KADH,qBAC8B,CAC1BI,QACAC,aAEDJ,MAAK,SAAUK,GACd,OAAOA,KAERJ,OAAM,SAAUK,GACf,OAAOA,EAAMD,a,kBDjCbT,EAAQC,EAAQ,IAGTW,EAAgB,WAG3B,OAFAb,EAASc,IAAGC,QAAQC,OAAOC,SAASC,UACpCC,QAAQC,IAAI,aAAcC,cACnBrB,GAGIsB,EAAqB,WAYhC,OAXAtB,EAASa,KACFU,GAAG,WAAW,WACnBvB,EACGwB,KAAK,gBACLD,GAAG,iBAAiB,WACnBJ,QAAQC,IAAI,qCAEbG,GAAG,gBAAgB,SAACE,GACnBN,QAAQC,IAAR,wBAA6BM,KAAKC,UAAUF,EAAIG,cAG/C5B,GAGI6B,EAAoB,SAACC,EAAeC,GAAhB,OAC/B9B,EACG+B,IADH,2CAEwCF,EAAcC,GAAkBE,IAFxE,0BAE6FH,EAAcC,GAAkBG,SAASC,SAEnI9B,MAAK,SAACK,GACL,OAAO0B,EAAYN,EAAeC,EAAkBrB,EAASkB,SAE9DtB,OAAM,SAAUK,GACfQ,QAAQC,IAAIT,OAGZyB,EAAc,SAACN,EAAeC,EAAkBG,GACpD,IAAMG,EAAkBP,EAAcC,GAAkBG,SAASI,OAC/DJ,GAEEK,EAAuBT,EAE3B,OADAS,EAAqBR,GAAkBG,SAAWG,EAC3CE,GAGIC,EAAqB,SAACC,EAAKC,EAAeX,GAMrD,OALAU,EAAIE,iBACJ3C,EAAOwB,KAAK,UAAW,CACrBoB,YAAab,EACbc,SAAUH,KAEL,GAGII,EAAmB,SAACL,EAAKC,EAAeK,EAAeC,GAGlE,OAFAP,EAAIE,iBACJ3C,EAAOwB,KAAK,gBAAiB,CAAEuB,gBAAeL,gBAAeM,WACtD,GAGIC,EAAa,SAACD,GACzBhD,GAAUA,EAAOwB,KAAK,cAAewB,IAG1BE,EAAmB,WAC9BlD,GAAUA,EAAOmD,QACjBnD,EAAS,MAGEoD,EAAsB,SAACC,EAAevB,GACjD,IAAIS,EAAuBT,EAW3B,OAVIuB,IACEA,EAAcC,gBAChBf,EAAqBc,EAAcN,eACjCM,EAAcC,gBAEhBf,EAAqBc,EAAcN,eAAeb,SAASqB,QACzDF,EAAcG,UAIbjB,GEnFTrC,EAAQ,IAAUuD,SAElB,IAAMxD,EAAQC,EAAQ,IAETwD,EAAiB,kBAC5BzD,EACG+B,IADH,sBAEG3B,MAAK,SAACK,GACL,OAAOA,EAASkB,QAEjBtB,OAAM,SAAUK,GACfQ,QAAQC,IAAIT,OAGLgD,EAAW,kBACtB1D,EACG+B,IADH,cAEG3B,MAAK,SAACK,GACL,IAAMkD,EAAqBlD,EAASkB,KAAKiC,QAAO,SAACC,GAAD,OAAUA,EAAKC,YAC/D,OAAOC,EAAWJ,MAEnBtD,OAAM,SAAUK,GACfQ,QAAQC,IAAIT,OAGLsD,EAAmB,SAACC,GAAD,OAC9BjE,EACG+B,IADH,oCAEG3B,MAAK,SAACK,GACL,OAAOyD,EAAkCzD,EAASkB,KAAMsC,MAEzD5D,OAAM,SAAUK,GACfQ,QAAQC,IAAIT,OAGLyD,EAAc,SAACC,EAAQN,GAAT,OACzB9D,EACGqE,IADH,kCAC0C,CAAErC,IAAKoC,EAAQN,aACtD1D,MAAK,SAACK,GAEL,OADAS,QAAQC,IAAI,aAAcV,GACnBA,KAERJ,OAAM,SAAUK,GACfQ,QAAQC,IAAIT,OAGZwD,EAAoC,SAACrC,EAAeoC,GACxD,IAAMK,EAAuB,GAQ7B,OAPAzC,EAAc0C,SAAQ,SAACC,GACrBF,EACEE,EAAaC,MAAM,KAAOR,EACtBO,EAAaC,MAAM,GACnBD,EAAaC,MAAM,IACrBD,KAECF,GAGHP,EAAa,SAACU,GAClB,IAAMC,EAAe,GAIrB,OAHAD,EAAMF,SAAQ,SAACV,GACba,EAAab,EAAK7B,KAAO6B,KAEpBa,G,SC9DH1E,EAAQC,EAAQ,IAEhB0E,EAAW,oEACXC,EAAa,iCAENC,EAAkB,SAACC,GAC9BA,EAAMA,GAAO,GAEb,IAAMC,EAASC,gBAAMF,GAAK,GAK1B,IAC2E,IAAzE,CAAC,kBAAmB,cAAe,YAAYG,QAAQF,EAAOG,MAC9D,CACA,IAAIC,EAAW,KACf,GAAI,MAAOJ,EAAOK,MACZL,EAAOK,MAAMC,GAAKN,EAAOK,MAAMC,EAAEC,MAAM,oBACzCH,EAAWJ,EAAOK,MAAMC,OAErB,CACL,IAAMC,EAAQV,EAAWW,KAAKR,EAAOS,UACjCF,IACFH,EAAWG,EAAM,IAIrB,GAAIH,EACF,MAAM,6BAAN,OAAoCA,EAApC,kBAKJ,IAEG,IADD,CAAC,gBAAiB,YAAa,oBAAoBF,QAAQF,EAAOG,MAElE,CACA,IAAMI,EAAQX,EAASY,KAAKR,EAAOS,UACnC,GAAIF,EAAO,CACT,IAAMH,EAAWG,EAAM,GACvB,OAAOtF,EACJ+B,IADI,yCACkCoD,EADlC,UAEJ/E,MAAK,SAACqF,GACL,OAAOA,EAAI9D,KAAK,GAAG+D,mBAEpBrF,OAAM,WACL,OAAO,MAKf,OAAO,MCrDTJ,EAAQ,IAAUuD,SAElB,IAAMxD,EAAQC,EAAQ,IAET0F,EAAiB,SAACC,EAAOC,GAAR,OAC5B7F,EACGG,KADH,iBAC0B,CACtByF,QACAC,WAEDzF,MAAK,SAAUK,GACd,OAAOA,EAASkB,QAEjBtB,OAAM,SAAUK,GACf,OAAOA,EAAMD,SAASkB,SAGfmE,EAAiB,SAACC,EAAYC,GAAb,OAC5BhG,EACGqE,IADH,yBACyB0B,GAAcC,GACpC5F,MAAK,SAAUK,GACd,OAAOA,EAASkB,QAEjBtB,OAAM,SAAUK,GACf,OAAOA,EAAMD,SAASkB,SAGfsE,EAAiB,SAACF,GAAD,OAC5B/F,EACGkG,OADH,yBAC4BH,IACzB3F,MAAK,SAAUK,GACd,OAAOA,EAASkB,QAEjBtB,OAAM,SAAUK,GACf,OAAOA,EAAMD,SAASkB,SAGfwE,EAAe,kBAC1BnG,EACG+B,IADH,kBAEG3B,MAAK,SAAUK,GACd,OAAOA,EAASkB,QAEjBtB,OAAM,SAAUK,GACf,OAAOA,EAAMD,SAASkB,SAGfyE,EAAmB,kBAC9BpG,EACG+B,IADH,gCAEG3B,MAAK,SAAUK,GACd,OAAOA,EAASkB,QAEjBtB,OAAM,SAAUK,GACf,OAAOA,EAAMD,SAASkB,SAGf0E,EAAc,SAACN,GAAD,OACzB/F,EACG+B,IADH,yBACyBgE,IACtB3F,MAAK,SAAUK,GACd,OAAOA,EAASkB,QAEjBtB,OAAM,SAAUK,GACf,OAAOA,EAAMD,SAASkB,SAGf2E,EAAqB,kBAChCtG,EACG+B,IADH,yBAEG3B,MAAK,SAAUK,GACd,OAAOA,EAASkB,QAEjBtB,OAAM,SAAUK,GACf,OAAOA,EAAMD,SAASkB,S,sDCuHb4E,OAvLf,SAAgBC,GAAQ,IAAD,EACuBC,oBAAS,GADhC,mBACdC,EADc,KACEC,EADF,OAE+BF,oBAAS,GAFxC,mBAEdG,EAFc,KAEMC,EAFN,OAG2BJ,mBAAS,IAHpC,mBAGdK,EAHc,KAGIC,EAHJ,OAIqBN,oBAAS,GAJ9B,mBAIdO,EAJc,KAICC,EAJD,KAKfC,EAAUC,eAEVC,EAAc,WAClBP,GAAsB,GACtBF,GAAkB,IAoCdU,EAAU,SAACvD,GACfsD,IACAE,EAAwB,YAAD,OAAaxD,KAahCyD,EAAsB,SAAC9G,GAC3B,IAAM8C,EAAUiE,OAAOC,OAAOhH,EAASkB,MAAM,GAAGH,IAC5CgG,OAAOC,OAAOhH,EAASkB,MAAM,GAAGH,IAChCf,EAASkB,KACb2F,EAAwB/D,EAAQmE,gBAW5BJ,EAA0B,SAAC/D,GAC/BwD,EAAoBxD,GACpBoE,YAAW,WACTZ,EAAoB,QACnB,MAGL,OACE,yBAAKa,GAAG,mBACN,yBACEA,GAAG,SACHC,UAAS,sBACLf,GAAoB,kBADf,wBAEJJ,GAAkB,mBAFd,eAKRI,GACC,kBAACgB,GAAA,EAAD,CAAYD,UAAW,mBAAoBE,QAAQ,MAChDjB,IAGHA,GAAoBN,EAAMwB,QAC1B,kBAAC,IAAMC,SAAP,KACE,yBAAKL,GAAG,uBACLpB,EAAMvC,aAAeuC,EAAMvC,YAAYH,SACtC,kBAACoE,GAAD,CACEN,GAAG,wBACHO,aAAc3B,EAAM2B,eAGtB,yBAAKP,GAAG,yBACJlB,GAAkBE,EAClB,kBAACwB,GAAA,EAAD,CACER,GAAG,cACHS,QAAS,WACP1B,GAAkB,GAClBE,GAAsB,KAJ1B,SAUA,kBAACuB,GAAA,EAAD,CACER,GAAG,iBACHS,QAAS,kBAAMxB,GAAsB,KAFvC,iBAUPH,GACC,kBAAC,GAAD,CACEU,YAAaA,EACbkB,gBA/DU,SAACC,GAClB3B,EAlBgB,SAAC2B,GAAW,IACzBhI,EAAqCgI,EAArChI,MAAOC,EAA8B+H,EAA9B/H,SAA8B+H,EAApBC,kBACLhI,EAChBiI,EAAY9H,SAASJ,EAAOC,GAAUJ,MAAK,SAACK,GAC1C8G,EAAoB9G,GACA,MAApBA,EAASiI,QAAkBtB,OAE7BE,EAAwB,0BAc1BqB,CAAeJ,GA3DC,SAACA,GAAW,IACtBhI,EAAoBgI,EAApBhI,MAAOC,EAAa+H,EAAb/H,SACfiI,EAAYnI,MAAMC,EAAOC,GAAUJ,MAAK,SAACK,GACf,MAApBA,EAASiI,QACXE,EAAiB3F,mBACbxC,EAASkB,KAAKmC,UAChBsD,IACAC,EAAQ5G,EAASkB,KAAKmC,YAEtBmD,GAAiB,GACjBK,EAAwB,6BAE1Bd,EAAM2B,gBAENZ,EAAoB9G,MA2CtBoI,CAAYN,IA8DFO,kBApGY,SAAChF,GACzBiF,EACG5E,YAAYqC,EAAMvC,YAAYjC,IAAK8B,GACnC1D,MAAK,SAACK,GACmB,MAApBA,EAASiI,QACXrB,EAAQ5G,EAASkB,KAAKmC,UACtBmD,GAAiB,GACjBT,EAAM2B,gBAENZ,EAAoB9G,OA4FduG,cAAeA,EACfC,iBAAkBA,EAClBL,mBAAoBA,KAGtBF,GACA,kBAACsC,GAAD,CACEC,UAAWzC,EAAMyC,UACjB3B,wBAAyBA,IAG7B,yBAAKM,GAAG,yBACN,yBACEA,GAAG,2BACHS,QAAS7B,EAAM0C,wBAEd1C,EAAMvC,aAAeuC,EAAMvC,YAAYH,SACtC,kBAAC,IAAMmE,SAAP,KACIzB,EAAM2C,qBAQN,kBAAC,IAAD,CACEvB,GAAG,wBACHwB,MAAO,CAAEC,SAAU,MATrB,kBAAC,IAAD,CACEzB,GAAG,yBACHwB,MAAO,CACLC,SAAU,OAWlB,kBAAC,IAAMpB,SAAP,MACIvB,GACA,kBAAC,KAAD,CACE2B,QAAS,kBAAMnB,EAAQoC,KAAK,MAC5BF,MAAO,CAAEC,SAAU,a,6BC7K5B,SAASL,GAAkBxC,GACxC,IAAMU,EAAUC,eAEhB,OACE,yBAAKU,UAAU,iCACb,kBAAC0B,GAAA,EAAD,CACEC,KAAK,QACL3B,UAAU,sBACV4B,QAASjD,EAAMyC,WAAa,GAC5BS,SAAU,SAAClH,EAAKmH,GACdnD,EAAMc,wBAAN,iBAAwCqC,EAAS/D,MAAjD,YACAsB,EAAQoC,KAAR,oBAA0BK,EAAS3H,OAErC4H,eAAgB,SAACC,GAAD,OAAYA,EAAOjE,OACnCkE,YAAa,SAACC,GACZ,OACE,kBAACC,GAAA,EAAD,iBACMD,EADN,CAEEE,WAAU,6BACLF,EAAOE,YADF,IAERb,MAAO,CAAEc,MAAO,UAElBC,MAAM,wBACNpC,QAAQ,kB,6CCmFPqC,OA1Gf,SAAoB5D,GAAQ,IAAD,EACSC,mBAAS,IADlB,mBAClB4D,EADkB,KACPC,EADO,KAEnBC,EAAaC,iBAAO,MAEpBC,EAAqB,SAACjI,GAC1BtB,QAAQC,IAAI,gBAAiBkJ,GACb,UAAZ7H,EAAIkI,KACNC,KAIEA,EAA6B,WAChCnE,EAAMQ,cAEHR,EAAMsC,kBAAkBuB,EAAUvG,UADlC0C,EAAM8B,gBAAgB+B,IAI5BO,qBAAU,WACRL,GAAcA,EAAWM,QAAQC,UAChC,CAACtE,EAAMI,qBAEV,IAAMmE,EAAkB,CAAEC,OAAQ,kBAAmBd,MAAO,SAE5D,OACE,yBACEtC,GAAG,aACHC,UAAWrB,EAAMI,mBAAqB,qBAAuB,IAE7D,kBAACoD,GAAA,EAAD,CACEiB,WAAS,EACTC,SAAUX,EACVY,MAAOd,EAAUvG,UAAYuG,EAAU9J,OAAS,GAChDsH,UAAS,+BACPrB,EAAMQ,eAAiB,kBAEzBwC,KAAK,QACLE,SAAU,SAAClH,GAAD,OACPgE,EAAMQ,cAEHsD,EAAa,6BAAKD,GAAN,IAAiBvG,SAAUtB,EAAI4I,OAAOD,SADlDb,EAAa,6BAAKD,GAAN,IAAiB9J,MAAOiC,EAAI4I,OAAOD,UAGrDE,UAAW,SAAC7I,GAAD,OAASiI,EAAmBjI,IACvCuF,QAAQ,WACRuD,YAAc9E,EAAMQ,cAA0B,WAAV,QACpCiD,WAAY,CAAEb,MAAO2B,MAErBvE,EAAMQ,eACN,kBAACgD,GAAA,EAAD,CACEuB,KAAK,WACLJ,MAAOd,EAAU7J,UAAY,GAC7BqH,UAAW,0BACX2B,KAAK,QACLE,SAAU,SAAClH,GAAD,OACR8H,EAAa,6BAAKD,GAAN,IAAiB7J,SAAUgC,EAAI4I,OAAOD,UAEpDE,UAAW,SAAC7I,GAAD,OAASiI,EAAmBjI,IACvCuF,QAAQ,WACRuD,YAAY,WACZrB,WAAY,CAAEb,MAAO2B,KAGxBvE,EAAMI,oBACL,kBAACoD,GAAA,EAAD,CACEuB,KAAK,WACLJ,MAAOd,EAAU7B,iBAAmB,GACpCX,UAAW,iCACX2B,KAAK,QACLE,SAAU,SAAClH,GAAD,OACR8H,EAAa,6BACRD,GADO,IAEV7B,gBAAiBhG,EAAI4I,OAAOD,UAGhCE,UAAW,SAAC7I,GAAD,OAASiI,EAAmBjI,IACvCuF,QAAQ,WACRuD,YAAY,mBACZrB,WAAY,CAAEb,MAAO2B,KAIzB,yBACElD,UACErB,EAAMI,mBACF,+BACA,wBAGN,kBAACwB,GAAA,EAAD,CACEC,QAAS,kBAAMsC,EAA2BN,IAC1CtC,QAAQ,WACRF,UAAW,UAEX,kBAAC,KAAD,CAAkBwB,SAAS,WAE7B,kBAACjB,GAAA,EAAD,CACEC,QAAS,kBAAM7B,EAAMY,eAAiBkD,EAAa,KACnDvC,QAAQ,WACRF,UAAW,SAEX,kBAAC,KAAD,CAAWwB,SAAS,gB,gBClGf,SAASmC,GAAUhF,GAAQ,IAAD,EACGC,mBAAS,MADZ,mBAChC3D,EADgC,KACjB2I,EADiB,OAEGhF,mBAAS,IAFZ,mBAEhC5E,EAFgC,KAEjB6J,EAFiB,OAGGjF,qBAHH,mBAGhCrD,EAHgC,KAGjBuI,EAHiB,OAIalF,mBAAS,GAJtB,mBAIhCmF,EAJgC,KAIfC,EAJe,OAKGpF,mBAAS,GALZ,mBAKhCqF,EALgC,KAKpBC,EALoB,KAOvCnB,qBAAU,WACJpE,EAAMvC,aACR8E,EACG/E,iBAAiBwC,EAAMvC,YAAYjC,KACnC5B,MAAK,SAACyB,GACL6J,EAAiB7J,GACjB2E,EAAMzG,OAAOuB,GAAG,WAAW,SAAUK,GACnCgK,EAAiBhK,WAIxB,CAAC6E,EAAMzG,SAEV6K,qBAAU,WACJxH,IACFsI,EACE9C,EAAiBzF,oBAAoBC,EAAevB,IAEtDgK,EAAyBD,EAAkB,MAE5C,CAACxI,IAWJ,OACE,yBACEyE,UACErB,EAAM2C,qBACF,8BACA,+BAGJrG,GACA,kBAACkJ,GAAD,CACEvH,MAAO+B,EAAM/B,MACbR,YAAauC,EAAMvC,YACnBpC,cAAeA,EACf4J,iBAAkBA,IAGrB3I,GACC,kBAACmJ,GAAD,CACEhK,SACEJ,EAAciB,EAAcd,KAA5B,aACQH,EAAciB,EAAcd,KAAKC,UACrC,GAEN6J,WAAYA,EACZF,gBAAiBA,EACjB9I,cAAeA,EACfoJ,YAnCY,WAClBtD,EACGhH,kBAAkBC,EAAeiB,EAAcd,KAC/C5B,MAAK,SAACkC,GACLoJ,EAAiBpJ,GACjByJ,EAAoBD,EAAa,OA+B/BL,iBAAkBA,KAnE5BxL,EAAQ,IAAUuD,S,OCGH,SAASwI,GAAcxF,GACpC,IAAM/B,EAAQ+B,EAAM/B,aACT+B,EAAM/B,MAAM+B,EAAMvC,YAAYjC,MAAQwF,OAAOC,OAAOjB,EAAM/B,OACjE,GAEJ,OACE,yBAAKmD,GAAG,0BACN,yBAAKA,GAAG,mBACN,kBAAC2B,GAAA,EAAD,CACE3B,GAAG,aACHC,UAAU,0BACV4B,QAAShF,EACTiF,SAAU,SAAClH,EAAKM,GACd0D,EAAMiF,iBAAiB3I,IAEzB8G,eAAgB,SAACC,GAAD,OAAYA,EAAO/F,UACnCgG,YAAa,SAACC,GAAD,OACX,kBAACC,GAAA,EAAD,iBACMD,EADN,CAEEoC,gBAAiB,CACf/C,MAAO,CAAEc,MAAO,SAElBoB,YAAY,oBACZnB,MAAM,oBACNpC,QAAQ,kBAKhB,yBAAKH,GAAG,mCACLpB,EAAM3E,eACL2F,OAAO4E,KAAK5F,EAAM3E,eAAewK,KAAI,SAACvJ,GAAD,OACnC,yBACE4H,IAAG,sBAAiBlE,EAAM3E,cAAciB,GAAed,KACvD6F,UAAW,iCACXQ,QAAS,SAAC7F,GACRgE,EAAMiF,iBAAiBjF,EAAM/B,MAAM3B,MAGrC,kBAAC,GAAD,CACEmB,YAAauC,EAAMvC,YACnBnB,cAAe0D,EAAM/B,MAAM3B,GAC3BS,QAASiD,EAAM3E,cAAciB,GAAeb,SAAS,WA5CrEhC,EAAQ,IAAUuD,S,OCDH,SAASwI,GAAcxF,GACpC,OACE,yBAAKqB,UAAU,wBACb,2BACE,2BAAIrB,EAAM1D,eAAiB0D,EAAM1D,cAAcgB,WAEjD,2BAAI0C,EAAMjD,QAAQX,WARxB3C,EAAQ,IAAUuD,S,+KCcH,SAAS0E,GAAS1B,GAC/B,IAyBc8F,EAzBRpF,EAAUC,eADsB,EAGZoF,IAAM9F,SAAS,CACvC+F,UAAU,IAJ0B,mBAG/BC,EAH+B,KAGxBC,EAHwB,KAOhCC,EAAiB,SAACH,EAAUI,GAAX,OAAoB,SAACC,IAEzB,YAAfA,EAAMtB,MACS,QAAdsB,EAAMnC,KAA+B,UAAdmC,EAAMnC,MAKhCgC,EAAS,6BAAKD,GAAN,mBAAcD,EAAWI,OAG7BE,EAAe,WACnBrE,EAAYvI,SAASE,MAAK,WACxBwI,EAAiB3F,mBACjBuD,EAAM2B,eACNjB,EAAQoC,KAAK,SA+CjB,OACE,6BACE,kBAAC,IAAMrB,SAAP,CAAgByC,IAAK,YACnB,kBAACtC,GAAA,EAAD,CACEgB,MAAO,CAAE2D,OAAQ,QACjB1E,QAASsE,EAAe,YAAY,IAElCF,EAAMD,SAGN,kBAAC,KAAD,CAAcpD,MAAO,CAAEC,SAAU,OAAQa,MAAO,WAFhD,kBAAC,KAAD,CAAUd,MAAO,CAAEC,SAAU,OAAQa,MAAO,YAKhD,kBAAC8C,GAAA,EAAD,CACEV,OAAQ,OACRM,KAAMH,EAAK,SACXQ,QAASN,EAAe,YAAY,KA3D9BL,EA6DA,WA5DZ,yBACEY,KAAK,eACL7E,QAASsE,EAAeL,GAAQ,GAChCjB,UAAWsB,EAAeL,GAAQ,IAElC,kBAACa,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAU/E,QAAS,kBAAMnB,EAAQoC,KAAR,MAAmB+D,QAAM,EAAC3C,IAAK,gBACtD,kBAAC4C,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAS,mBAEzB,kBAACJ,GAAA,EAAD,CACE/E,QAAS,kBAAMnB,EAAQoC,KAAR,kBACf+D,QAAM,EACN3C,IAAK,aAEL,kBAAC4C,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAS,kBAEzB,kBAACJ,GAAA,EAAD,CACE/E,QAAS,kBAAMnB,EAAQoC,KAAR,qBACf+D,QAAM,EACN3C,IAAK,eAEL,kBAAC4C,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAS,kBAEzB,kBAACJ,GAAA,EAAD,CAAU/E,QAASyE,EAAcO,QAAM,EAAC3C,IAAK,UAC3C,kBAAC4C,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAS,kB,gCCtElB,SAASC,GAASjH,GAAQ,IAAD,EACAC,oBAAS,GADT,mBAC/BiH,EAD+B,KAClBC,EADkB,OAENlH,mBAAS,MAFH,mBAE/BkD,EAF+B,KAErBiE,EAFqB,OAGInH,mBAAS,MAHb,mBAG/BrD,EAH+B,KAGhBuI,EAHgB,OAIYlF,mBAAS,GAJrB,mBAI/BoH,EAJ+B,KAIZC,EAJY,OAKArH,mBAAS,MALT,mBAK/BsH,EAL+B,KAKlBC,EALkB,KAMhC9G,EAAUC,eACVpE,EAAQyD,EAAMlB,MAAMyE,OAAOnC,GAEjCgD,qBAAU,WACR,OAAO,kBAAMpE,EAAMzG,QAAU6I,EAAiB5F,WAAWD,MACxD,IAEH6H,qBAAU,WACRqD,MACC,CAACzH,EAAMlB,MAAMyE,OAAOnC,KAEvBgD,qBAAU,WACRsD,MACC,CAAC1H,EAAMzG,SAEV,IAAMkO,EAAiB,WACrB,IAAME,EAAW,IAAIC,gBAAgBrN,OAAOC,SAASqN,QAAQtM,IAAI,SAEjE+L,EADcK,EAAWA,EAAW,EAAI,GAExCG,EAAgBjI,YAAYG,EAAMlB,MAAMyE,OAAOnC,IAAIxH,MAAK,SAACuJ,GACvDiE,EAAYjE,GACZuE,IACAhH,EAAQoC,KAAR,oBAA0BK,EAAS3H,UAIjCkM,EAAiB,WACrB1H,EAAMzG,OAAOwB,KAAK,aAAcwB,EAAOgL,GACvCC,EAAejL,GACfyD,EAAMzG,OAAOuB,GAAG,iBAAiB,SAAUK,GACzCgK,EAAiBhK,OAQf4M,EAAe,WACnBV,EAAoB,GAAKlE,EAAS9D,OAAO3D,OAAS,GAChD4L,EAAqBD,EAAoB,IAG7C,OACE,yBAAKhG,UAAU,sBACb,yBAAKA,UAAU,YACZ6F,GACC,4BAAQ7F,UAAU,eAChB,kBAAC,KAAD,CAAiBQ,QAdT,WAChBwF,EAAoB,GAAK,GAAKC,EAAqBD,EAAoB,IAa1BzE,MAAO,CAAEC,SAAU,OAG3DM,GACC,kBAAC6E,GAAD,CACEC,aACE9E,EAAS9D,OAAOgI,IAChBlE,EAAS9D,OAAOgI,GAAmB/I,IAErCyJ,aAAcA,EACdZ,eAAgBA,IAGnBD,GACC,4BAAQ7F,UAAU,kBACf,IACD,kBAAC,KAAD,CAAkBQ,QAASkG,EAAcnF,MAAO,CAAEC,SAAU,QAIjEqE,GACC,kBAACgB,GAAD,CACEzK,YAAauC,EAAMvC,YACnBb,cAAeA,EACfL,MAAOA,KAhFjB9C,EAAQ,IAAUuD,S,+BCFH,SAASgL,GAAOhI,GAC7B,IAAMmI,EAAgB,uGAAuGC,KAC3HpI,EAAMiI,cAGR,OACE,yBAAK5G,UAAU,kBACZrB,EAAMiI,aACL,kBAAC,KAAD,CACE5G,UAAY8G,EAAiC,wBAAjB,eAC5B7J,IAAK0B,EAAMiI,aACXI,MAAQF,EAAyB,mBAAT,OACxB5B,OAAQ,OACR+B,UAAU,EACVC,QAASvI,EAAM+H,aACfS,SAAS,EACTC,QAAS,kBAAMzI,EAAMmH,gBAAe,MAGtC,wBAAIvE,MAAO,CAAEc,MAAO,QAASgF,OAAQ,OAAQC,UAAW,WAAxD,yBArBRlP,EAAQ,IAAUuD,S,yCCOH,SAASiK,GAASjH,GAAQ,IAAD,EACVC,mBAAS,IADC,mBAC/BZ,EAD+B,KACvBuJ,EADuB,OAEZ3I,mBAAS,MAFG,mBAE/Bb,EAF+B,KAExByJ,EAFwB,OAGV5I,mBAAS,CAAEb,MAAO,KAAMC,OAAQ,OAHtB,mBAG/ByJ,EAH+B,KAGvBC,EAHuB,OAIF9I,mBAAS,MAJP,mBAI/B+I,EAJ+B,KAInBC,EAJmB,KAKhCvI,EAAUC,eAEhByD,qBAAU,WACRpE,EAAMkJ,MACJpB,EAAgBjI,YAAYG,EAAMlB,MAAMyE,OAAOnC,IAAIxH,MAAK,SAACuJ,GACvDyF,EAAUzF,EAAS9D,QACnBwJ,EAAS1F,EAAS/D,YAErB,IAEH,IAUMD,EAAiB,SAACnD,GACtBA,EAAIE,iBACAmD,EAAO3D,OAAS,EAClBoM,EAAgB3I,eAAeC,EAAOC,GAAQzF,MAAK,SAACuJ,GAClDA,EAAS2F,OACLC,EAAU5F,EAAS2F,QACnB3F,GAAYzC,EAAQoC,KAAR,oBAA0BK,EAAS3H,SAGrDuN,EAAU,CAAE1J,OAAQ,sBAIlB8J,EAAQ,yCAAG,WAAOnN,GAAP,gBAAAoN,EAAA,yDACfpN,EAAIE,kBACAmN,KAAYC,QAAQN,GAFT,iCAGcO,EAAiBlL,gBAAgB2K,GAH/C,OAGPQ,EAHO,OAIbZ,EAAU,GAAD,oBAAKvJ,GAAL,CAAa,CAAEf,IAAK0K,EAAYQ,mBACzCP,EAAc,IACdH,EAAOzJ,QAAU0J,EAAU,CAAE1J,OAAQ,OANxB,wBAQb0J,EAAU,CAAE1J,OAAQ,qBARP,4CAAH,sDAgBd,OACE,yBAAKgC,UAAU,6BACb,yBAAKA,UAAU,oCACb,yBACEA,UAAS,0DACPrB,EAAMkJ,MAAQ,0BAGhB,kBAAC1F,GAAA,EAAD,CACEqB,UAAW,SAAC7I,GAAD,MAAqB,UAAZA,EAAIkI,KAAmBiF,EAASnN,IACpD8I,YAAY,2BACZH,MAAOqE,GAAc,GACrB9O,MAAO4O,EAAOzJ,OACdgC,UAAU,gBACV6B,SAAU,SAAClH,GAAD,OAASiN,EAAcjN,EAAI4I,OAAOD,QAC5CF,WAAS,EACThB,WAAY,CACVb,MAAO,CAAEc,MAAO,WAGpB,kBAAC9B,GAAA,EAAD,CACEP,UAAU,yBACVQ,QAAS,SAAC7F,GAAD,OAASmN,EAASnN,IAC3BuF,QAAQ,aAHV,cAQF,yBACEF,UAAS,0DACPrB,EAAMkJ,MAAQ,0BAGhB,kBAAC1F,GAAA,EAAD,CACEqB,UAAW,SAAC7I,GAAD,MAAqB,UAAZA,EAAIkI,KAAmB/E,EAAenD,IAC1D8I,aAAc9E,EAAMkJ,MAAQ,iCAC5BhP,MAAO4O,EAAO1J,MACduF,MAAOvF,GAAS,GAChBiC,UAAU,gBACV6B,SAAU,SAAClH,GAAD,OAAS6M,EAAS7M,EAAI4I,OAAOD,QACvClB,WAAY,CACVb,MAAO,CAAEc,MAAO,WAGpB,kBAAC9B,GAAA,EAAD,CACEP,UAAU,yBACVQ,QAAS,SAAC7F,GACRgE,EAAMkJ,KArFhBpB,EACGxI,eAAeU,EAAMlB,MAAMyE,OAAOnC,GAAI,CAAEhC,QAAOC,WAC/CzF,MAAK,SAACuJ,GACLA,EAAS2F,OACLC,EAAU5F,EAAS2F,QACnBpI,EAAQoC,KAAK,oBAgFkB3D,EAAenD,IAE9CuF,QAAQ,aAENvB,EAAMkJ,KAAkB,eAAX,YAIpB7J,GACC,kBAACoK,GAAD,CACEpK,OAAQA,EACRuJ,UAAWA,EACXc,YA/DY,SAACC,GACnBtK,EAAOuK,OAAOD,EAAO,IAAMf,EAAU,aAAIvJ,QArD7C5F,EAAQ,IAAUuD,S,oDCAH,SAAS6M,GAAU7J,GAAQ,IAAD,EACLC,mBAAS,IADJ,mBAChCwC,EADgC,KACrBqH,EADqB,OAES7J,mBAAS,MAFlB,mBAEhC8J,EAFgC,KAEdC,EAFc,OAGO/J,oBAAS,GAHhB,mBAGhCgK,EAHgC,KAGfC,EAHe,KAIjCxJ,EAAUC,eAEhByD,qBAAU,WACRpE,EAAMzG,OAAS4Q,IAAuBxK,MACrC,CAACK,EAAMzG,SAEV,IAAM6Q,EAAO,SAACjH,EAAUkH,GAClBA,EACF3J,EAAQoC,KAAR,oBAA0BK,EAAS3H,IAAnC,kBAAgD6O,IAEhD3J,EAAQoC,KAAR,oBAA0BK,EAAS3H,OAajC8O,EAAmB,WACvBN,EAAoB,MACpBE,GAAmB,IAYfvK,EAAe,WACnBmI,EAAgBlI,mBAAmBhG,MAAK,SAAC6I,GACvCqH,EAAarH,OAIX0H,EAAqB,WACzBnK,EAAMzG,OAAOuB,GAAG,wBAAwB,SAAUK,GAChD2O,EAAa,aAAI3O,OAEnB6E,EAAMzG,OAAOwB,KAAK,wBAAwB,IAG5C,OACE,yBAAKsG,UAAU,0BACZoB,GACCA,EAAUoD,KAAI,SAAC1C,EAAUwG,GAAX,OACZ,yBAAKzF,IAAG,kBAAayF,GAAStI,UAAU,YACtC,yBAAKA,UAAU,iBACb,yBACEA,UAAS,mCACPrB,EAAMzG,QAAU,wBAGlB,4BAAK4J,EAAS/D,QAEhB,yBAAKiC,UAAU,gCACb,kBAACO,GAAA,EAAD,CACEP,UAAS,8CACTE,QAAQ,YACRqB,MAAO,CAAE2H,WAAYvK,EAAMzG,QAAU,cACrCsI,QAAS,kBAAMuI,EAAKjH,KAJtB,SAQEnD,EAAMzG,QACN,kBAACqI,GAAA,EAAD,CACEP,UAAU,8CACVE,QAAQ,YACRM,QAAS,kBA9Dd,SAACsB,GACZzC,EAAQoC,KAAR,yBAA+BK,EAAS3H,MA6DT0N,CAAK/F,KAHtB,UAUN,yBAAK9B,UAAU,iBACZ8B,EAAS9D,OAAOwG,KAAI,SAACwE,EAAOV,GAAR,OACnB,yBACE9H,QAAS,kBAAMuI,EAAKjH,EAAUwG,EAAQ,IACtCzF,IAAG,eAAUyF,GACbtI,UAAU,0BAEV,yBACEmJ,IACEH,EAAMb,aAAea,EAAMb,aAAeiB,KAE5CpJ,UAAU,wBAKhBrB,EAAMzG,QACN,kBAACqI,GAAA,EAAD,CACEP,UAAU,yBACVE,QAAQ,YACRmC,MAAM,YACNV,KAAK,QACLnB,QAAS,kBAvFC,SAACsB,GACvB6G,EAAoB7G,GACpB+G,GAAmB,GAqFQQ,CAAgBvH,KAE/B,kBAAC,KAAD,CAAWN,SAAS,gBAK5BJ,EAAU,IACV,yBAAKpB,UAAU,gBACb,mDAGJ,kBAACsJ,GAAD,CACEC,OA1FiB,SAACzH,GAEtB2E,EAAgBrI,eAAe0D,EAAS3H,KAAK5B,MAAK,WAChD+F,IACA2K,OAEFN,EAAoB,OAqFhB5D,KAAM6D,EACNY,YAAaP,EACbQ,KAAMf,GAAoBA,K,yCC/HnB,SAASN,GAAazJ,GACnC,IAAM+K,EAAeC,cAAgB,YAAmB,IAAhBC,EAAe,EAAfA,EAAGZ,EAAY,EAAZA,MACzC,OACE,kBAACa,GAAD,CACE1B,aAAca,EAAMb,aACpBE,YAAa1J,EAAM0J,YACnBC,MAAOsB,EACP5J,UAAU,qBAKV8J,EAAoBC,cAAkB,YAAmB,IAAhBC,EAAe,EAAfA,SAC7C,OAAO,yBAAKhK,UAAU,sBAAsBgK,MAQ9C,OACE,kBAACF,EAAD,CAAmBG,KAAK,KAAKC,UANb,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACvBC,EAAiB1L,EAAMX,OAC7BW,EAAM4I,UAAU+C,KAAUD,EAAgBF,EAAUC,MAKjDzL,EAAMX,OAAOwG,KAAI,SAACwE,EAAOV,GAAR,OAChB,kBAACoB,EAAD,CACE7G,IAAG,eAAUyF,GACbA,MAAOA,EACPsB,EAAGtB,EACHU,MAAOA,Q,OC/BF,SAASa,GAAelL,GAAQ,IAAD,EACdC,oBAAS,GADK,mBACrC2L,EADqC,KAC5BC,EAD4B,KAG5C,OACE,yBACEC,aAAc,kBAAMD,GAAW,IAC/BE,aAAc,kBAAMF,GAAW,IAC/BxK,UAAU,iBAGV,yBACEmJ,IAAKxK,EAAMwJ,aAAexJ,EAAMwJ,aAAeiB,KAC/CpJ,UAAS,oCACLuK,GAAW,iBAGhBA,GACC,4BACE/J,QAAS,kBAAM7B,EAAM0J,YAAY1J,EAAM2J,QACvCtI,UAAU,uBAFZ,UAQF,4BACEQ,QAAS,kBAAM7B,EAAM0J,YAAY1J,EAAM2J,QACvCtI,UAAU,8BAFZ,W,cCrBS,SAAS6G,GAAUlI,GAAQ,IAAD,EACPC,mBAAS,IADF,mBAChCxE,EADgC,KACtBuQ,EADsB,OAEC/L,mBAAS,GAFV,mBAEhCgM,EAFgC,KAElBC,EAFkB,OAGGjM,mBAAS,IAHZ,mBAGhChE,EAHgC,KAGjBkQ,EAHiB,KAIjCC,EAAYpI,iBAAO,MAEzBI,qBAAU,WACR4H,EAAY,MACX,CAAChM,EAAMzD,QAWV6H,qBAAU,WACRpE,EAAMpD,eAAiBoP,EAAY,CAAChM,EAAMpD,eAAR,oBAA0BnB,OAC3D,CAACuE,EAAMpD,gBAEV,IAAMyP,EAAc,SAACrQ,EAAKC,GACpBA,EAAcP,OAAS,GAAKuQ,EAAe,IAb1B,IAAjBA,GACF9K,YAAW,WACT+K,EAAgB,KACf,KAELA,EAAgBD,EAAe,GAU7B7J,EAAiB/F,iBACfL,EACAC,EACA,CACET,IAAKwE,EAAMvC,YAAcuC,EAAMvC,YAAYjC,IAAM,GACjD8B,SAAU0C,EAAMvC,YACZuC,EAAMvC,YAAYH,SAClB,aAEN0C,EAAMzD,QACH4P,EAAiB,MAI1B,OACE,yBAAK9K,UAAU,cACb,yBAAKD,GAAG,yBAAyBC,UAAU,sBACxC5F,EAASoK,KAAI,SAAC9I,EAAS4M,GAAV,OACZ,yBAAKtI,UAAU,UAAU6C,IAAG,iBAAYyF,IACtC,uBAAGtI,UAAU,kBAAkBtE,EAAQT,cAAcgB,UACrD,uBAAG+D,UAAU,yBAAyBtE,EAAQA,aAGlD,yBAAKuP,IAAKF,KAEZ,yBAAKhL,GAAG,mBACN,yBAAKC,UAAU,mBACb,kBAACmC,GAAA,EAAD,CACEqB,UAAW,SAAC7I,GAAD,MACG,UAAZA,EAAIkI,KAAmBmI,EAAYrQ,EAAKC,IAE1C6I,YAAY,iBACZH,MAAO1I,EACPoF,UAAU,gBACV6B,SAAU,SAAClH,GAAD,OAASmQ,EAAiBnQ,EAAI4I,OAAOD,QAC/ClB,WAAY,CACVb,MAAO,CAAEc,MAAO,WAGpB,kBAAC9B,GAAA,EAAD,CACEP,UAAU,yBACVQ,QAAS,SAAC7F,GAAD,OAASqQ,EAAYrQ,EAAKC,IACnCsF,QAAQ,aAHV,WAnEV9H,EAAQ,IAAUuD,S,yBCGH,SAASyI,GAAKzF,GAAQ,IAAD,EACQC,mBAAS,IADjB,mBAC3BhE,EAD2B,KACZkQ,EADY,KAE5BC,EAAYpI,iBAAO,MACnBuI,EAAiBvI,iBAAO,MAExBqI,EAAc,SAACrQ,EAAKC,GACxBmG,EAAiBrG,mBACfC,EACAC,EACA+D,EAAM1D,cAAcd,MACjB2Q,EAAiB,KAiCxB,OARA/H,qBAAU,WACRpE,EAAMsF,WAAa,GAAKiH,EAAelI,QAAQmI,mBAC9C,CAACxM,EAAMsF,aAEVlB,qBAAU,WACRgI,EAAU/H,QAAQmI,mBACjB,CAACxM,EAAMoF,kBAGR,yBAAKhE,GAAG,iBACN,yBAAKA,GAAG,uBACN,kBAAC,KAAD,CACEA,GAAG,YACHS,QAAS,kBAAM7B,EAAMiF,iBAAiB,OACtCrC,MAAO,CAAEC,SAAU,MAErB,wBAAIzB,GAAG,cAAcpB,EAAM1D,cAAcgB,WAE3C,yBACE+D,UAAU,oBACVoL,SAAU,SAACzQ,GAAD,OAAkC,IAAzBA,EAAI4I,OAAO8H,WAAmB1M,EAAM0F,gBA1CrC,WAEtB,IADA,IAAMjK,EAAW,GACRwP,EAAIjL,EAAMvE,SAASC,OAAS,EAAGuP,GAAK,EAAGA,IAC9CxP,EAASqH,KACP,yBACEoB,IAAG,iBAAYlE,EAAMvE,SAASwP,GAAGzP,KAA9B,OAAoCyP,GACvC5J,UACErB,EAAMvE,SAASwP,GAAG0B,SAAW3M,EAAM1D,cAAcd,IAC7C,gBACA,cAGN,yBAAK6F,UAAW,WAAYrB,EAAMvE,SAASwP,GAAG7O,YAI9C6O,IAAMjL,EAAMvE,SAASC,OAAS,IAChCD,EAASqH,KAAK,yBAAKoB,IAAI,iBAAiBoI,IAAKC,KAEjD,OAAO9Q,EAyBFmR,GACD,yBAAKN,IAAKF,KAEZ,yBAAK/K,UAAU,cACb,yBAAKA,UAAU,mBACb,kBAACmC,GAAA,EAAD,CACEqB,UAAW,SAAC7I,GAAD,MACG,UAAZA,EAAIkI,KAAmBmI,EAAYrQ,EAAKC,IAE1C6I,YAAY,iBACZH,MAAO1I,EACPoF,UAAU,gBACV6B,SAAU,SAAClH,GAAD,OAASmQ,EAAiBnQ,EAAI4I,OAAOD,QAC/ClB,WAAY,CACVb,MAAO,CAAEc,MAAO,SAElBmJ,WAAS,IAEX,kBAACjL,GAAA,EAAD,CACEP,UAAU,yBACVQ,QAAS,SAAC7F,GAAD,OAASqQ,EAAYrQ,EAAKC,IACnCsF,QAAQ,aAHV,WA7EV9H,EAAQ,IAAUuD,S,wBCFlB,SAAS8P,KAIP,MAAO,CACLC,IAAI,GAAD,OAJO,GAIP,KACHC,KAAK,GAAD,OAJO,GAIP,KACJC,UAAU,cAAD,OANC,GAMD,eALE,GAKF,OAIb,IAAMC,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,WACV5J,MAAO,OACP2E,MAAO,IACPkF,gBAAiB,QACjB/I,OAAQ,oBACRgJ,aAAc,OACdC,UAAWL,EAAMM,QAAQ,GACzBC,QAASP,EAAMQ,QAAQ,EAAG,EAAG,GAC7BjF,UAAW,cAIA,SAASgC,GAAa3K,GACnC,IAAM6N,EAAUX,KAD0B,EAErBnH,IAAM9F,SAAS6M,IAA7BgB,EAFmC,oBAIpCC,EACJ,yBAAKnL,MAAOkL,EAAYzM,UAAWwM,EAAQR,OACzC,wBAAIjM,GAAG,sBAAP,UAAoCpB,EAAM8K,MAAQ9K,EAAM8K,KAAK1L,MAA7D,KACA,kBAACwC,GAAA,EAAD,CACEC,QAAS,kBAAM7B,EAAM4K,OAAO5K,EAAM8K,OAClCvJ,QAAQ,WACRmC,MAAM,aAHR,UAOA,kBAACiH,GAAD,OAIJ,OACE,kBAACqD,GAAA,EAAD,CACE5M,GAAG,eACHgF,KAAMpG,EAAMoG,KACZK,QAASzG,EAAM6K,YACfoD,kBAAgB,sBAEfF,G,0CCrDDX,GAAQc,aAAe,CAC3BC,QAAS,CACPnH,QAAS,CACPoH,KAAM,W,OCWG,SAASC,KAAO,IAAD,ECff,WAA0C,IAAvBC,EAAsB,0DAC5BvI,IAAM9F,SAASqO,GADa,mBAC/C3J,EAD+C,KACxC4J,EADwC,KAEhDC,EAASzI,IAAM0I,aAAY,WAC/BF,GAAS,SAAC5J,GAAD,OAAYA,OACpB,IACH,MAAO,CAACA,EAAO6J,GDW6CE,GADhC,mBACrBC,EADqB,KACGC,EADH,OAEU3O,mBAAS,MAFnB,mBAErBxC,EAFqB,KAERoR,EAFQ,OAGF5O,mBAAS,IAHP,mBAGrBhC,EAHqB,KAGd6Q,EAHc,OAIA7O,mBAAS,MAJT,mBAIrB1G,EAJqB,KAIbwV,EAJa,OAKkB9O,mBAAS,IAL3B,mBAKrB+O,EALqB,KAKJC,EALI,OAMAhP,oBAAS,GANT,mBAMrBuB,EANqB,KAMb0N,EANa,KAU5B9K,qBAAU,WACR+K,IACAxN,MACC,IAEH,IAAMA,EAAe,WACnBY,EAAYtF,iBAAiBrD,MAAK,SAACyD,GAC7BA,EACF+R,EAAQ/R,GAERgS,IAEFH,GAAU,OAIRG,EAAmB,WACvBR,EAAe,MACfE,EAAU3M,EAAiBhI,kBAGvBgV,EAAU,SAAC/R,GACfwR,EAAexR,GACf0R,EAAU3M,EAAiBvH,sBAC3B0H,EAAYrF,WAAWtD,MAAK,SAACqE,GAC3B6Q,EAAS7Q,OAIPkR,EAAsB,WAC1BrH,EAAgBhI,qBAAqBlG,MAAK,SAAC6I,GACzCwM,EAAmBxM,OAIvB,OACE,kBAAC,KAAD,KACE,yBAAKrB,GAAG,OACN,kBAAC,KAAD,KACE,0BACEkO,KAAK,WACLC,QAAQ,0DAGZ,kBAACC,GAAA,EAAD,CAAepC,MAAOA,IACpB,kBAAC,KAAD,KACE,kBAAC,GAAD,CACEzK,qBAAsBgM,EACtBjM,uBAAwBkM,EACxBnM,UAAWuM,EACXxN,OAAQA,EACRG,aAAcA,EACdlE,YAAaA,IAEf,yBAAK2D,GAAG,0BACN,yBACEA,GAAG,eACHC,UACEsN,EAAyB,2BAAwBc,GAGnD,kBAAC,KAAD,KACE,kBAAC,KAAD,CACEC,KAAK,gBACLC,OAAQ,kBAAM,kBAAC9F,GAAD,SAEhB,kBAAC,KAAD,CACE6F,KAAK,gBACLC,OAAQ,SAAC3P,GAAD,OACNzG,GACE,kBAAC0N,GAAD,iBACMjH,EADN,CAEEvC,YAAaA,EACblE,OAAQA,QAKhB,kBAAC,KAAD,CACEmW,KAAK,qBACLC,OAAQ,SAAC3P,GAAD,OACNvC,GAAe,kBAAC,GAAD,iBAAoBuC,EAApB,CAA2BkJ,MAAM,QAGpD,kBAAC,KAAD,CACEwG,KAAK,mBACLC,OAAQ,kBAAM,kBAAC,GAAD,CAAgBzG,MAAM,OAEtC,kBAAC,KAAD,CACEwG,KAAK,IACLC,OAAQ,kBAAMpW,GAAU,kBAACsQ,GAAD,CAAWtQ,OAAQA,SAIhDA,GAAUkE,GACT,kBAACuH,GAAD,CACE/G,MAAOA,EACP1E,OAAQA,EACRkE,YAAaA,EACbkF,qBAAsBgM,SEjHpBiB,QACW,cAA7BrV,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASqE,MACvB,2DCZN+Q,IAASF,OACP,kBAAC,IAAMG,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvW,MAAK,SAAAwW,GACJA,EAAaC,gBAEdxW,OAAM,SAAAK,GACLQ,QAAQR,MAAMA,EAAM6C,a,mBEzI5BuT,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.7ba0e7fc.chunk.js","sourcesContent":["import io from \"socket.io-client\";\n\nconst axios = require(\"axios\");\nlet socket;\n\nexport const connectSocket = () => {\n  socket = io.connect(window.location.hostname);\n  console.log(\"node env: \", process.env.NODE_ENV);\n  return socket;\n};\n\nexport const authenticateSocket = () => {\n  socket = connectSocket();\n  socket.on(\"connect\", function () {\n    socket\n      .emit(\"authenticate\")\n      .on(\"authenticated\", () => {\n        console.log(\"socket authentication complete\");\n      })\n      .on(\"unauthorized\", (msg) => {\n        console.log(`unauthorized: ${JSON.stringify(msg.data)}`);\n      });\n  });\n  return socket;\n};\n\nexport const fetchMoreMessages = (conversations, correspondent_id) =>\n  axios\n    .get(\n      `/api/users/current/conversations/${conversations[correspondent_id]._id}/load-messages/${conversations[correspondent_id].messages.length}`\n    )\n    .then((response) => {\n      return addMessages(conversations, correspondent_id, response.data);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\nconst addMessages = (conversations, correspondent_id, messages) => {\n  const updatedMessages = conversations[correspondent_id].messages.concat(\n    messages\n  );\n  let updatedConversations = conversations;\n  updatedConversations[correspondent_id].messages = updatedMessages;\n  return updatedConversations;\n};\n\nexport const sendPrivateMessage = (evt, messageToSend, correspondent_id) => {\n  evt.preventDefault();\n  socket.emit(\"message\", {\n    reciever_id: correspondent_id,\n    contents: messageToSend,\n  });\n  return true;\n};\n\nexport const sendGroupMessage = (evt, messageToSend, correspondent, group) => {\n  evt.preventDefault();\n  socket.emit(\"group-message\", { correspondent, messageToSend, group });\n  return true;\n};\n\nexport const leaveGroup = (group) => {\n  socket && socket.emit(\"leave-group\", group);\n};\n\nexport const disconnectSocket = () => {\n  socket && socket.close();\n  socket = null;\n};\n\nexport const updateConversations = (latestMessage, conversations) => {\n  let updatedConversations = conversations;\n  if (latestMessage) {\n    if (latestMessage.newConversation) {\n      updatedConversations[latestMessage.correspondent] =\n        latestMessage.newConversation;\n    } else {\n      updatedConversations[latestMessage.correspondent].messages.unshift(\n        latestMessage.message\n      );\n    }\n  }\n  return updatedConversations;\n};\n","const axios = require(\"axios\");\n\nexport const logout = () =>\n  axios\n    .post(\"/api/auth/logout\")\n    .then(() => {\n      return true;\n    })\n    .catch(function () {\n      return false;\n    });\n\nexport const login = (email, password) =>\n  axios\n    .post(`/api/auth/login`, {\n      email,\n      password,\n    })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      return error.response;\n    });\n\nexport const register = (email, password) =>\n  axios\n    .post(`/api/auth/register`, {\n      email,\n      password,\n    })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      return error.response;\n    });\n","require(\"dotenv\").config();\n\nconst axios = require(\"axios\");\n\nexport const getCurrentUser = () =>\n  axios\n    .get(`/api/users/current`)\n    .then((response) => {\n      return response.data;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\nexport const getUsers = () =>\n  axios\n    .get(`/api/users`)\n    .then((response) => {\n      const usersWithUsernames = response.data.filter((user) => user.username);\n      return indexUsers(usersWithUsernames);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\nexport const getConversations = (currentUser) =>\n  axios\n    .get(`/api/users/current/conversations`)\n    .then((response) => {\n      return indexConversationsByCorrespondent(response.data, currentUser);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\nexport const setUsername = (userId, username) =>\n  axios\n    .put(`/api/users/current/set-username`, { _id: userId, username })\n    .then((response) => {\n      console.log(\"response: \", response);\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\nconst indexConversationsByCorrespondent = (conversations, currentUser) => {\n  const indexedConversations = {};\n  conversations.forEach((conversation) => {\n    indexedConversations[\n      conversation.users[0] !== currentUser\n        ? conversation.users[0]\n        : conversation.users[1]\n    ] = conversation;\n  });\n  return indexedConversations;\n};\n\nconst indexUsers = (users) => {\n  const indexedUsers = {};\n  users.forEach((user) => {\n    indexedUsers[user._id] = user;\n  });\n  return indexedUsers;\n};\n","import { parse } from \"url\";\nconst axios = require(\"axios\");\n\nconst RE_VIMEO = /^(?:\\/video|\\/channels\\/[\\w-]+|\\/groups\\/[\\w-]+\\/videos)?\\/(\\d+)$/;\nconst RE_YOUTUBE = /^(?:\\/embed)?\\/([\\w-]{10,12})$/;\n\nexport const getThumbnailURL = (url) => {\n  url = url || \"\";\n\n  const urlobj = parse(url, true);\n\n  // TODO support thumbnails for more video hosting\n\n  //youtube\n  if (\n    [\"www.youtube.com\", \"youtube.com\", \"youtu.be\"].indexOf(urlobj.host) !== -1\n  ) {\n    let video_id = null;\n    if (\"v\" in urlobj.query) {\n      if (urlobj.query.v && urlobj.query.v.match(/^[\\w-]{10,12}$/)) {\n        video_id = urlobj.query.v;\n      }\n    } else {\n      const match = RE_YOUTUBE.exec(urlobj.pathname);\n      if (match) {\n        video_id = match[1];\n      }\n    }\n\n    if (video_id) {\n      return `http://img.youtube.com/vi/${video_id}/hqdefault.jpg`;\n    }\n  }\n\n  //vimeo\n  if (\n    [\"www.vimeo.com\", \"vimeo.com\", \"player.vimeo.com\"].indexOf(urlobj.host) !==\n    -1\n  ) {\n    const match = RE_VIMEO.exec(urlobj.pathname);\n    if (match) {\n      const video_id = match[1];\n      return axios\n        .get(`https://vimeo.com/api/v2/video/${video_id}.json`)\n        .then((res) => {\n          return res.data[0].thumbnail_large;\n        })\n        .catch(function () {\n          return false;\n        });\n    }\n  }\n\n  return null;\n};\n","require(\"dotenv\").config();\n\nconst axios = require(\"axios\");\n\nexport const createPlaylist = (title, tracks) =>\n  axios\n    .post(`/api/playlists`, {\n      title,\n      tracks,\n    })\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error.response.data;\n    });\n\nexport const updatePlaylist = (playlistId, playlistUpdates) =>\n  axios\n    .put(`/api/playlists/${playlistId}`, playlistUpdates)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error.response.data;\n    });\n\nexport const deletePlaylist = (playlistId) =>\n  axios\n    .delete(`/api/playlists/${playlistId}`)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error.response.data;\n    });\n\nexport const getPlaylists = () =>\n  axios\n    .get(`/api/playlists`)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error.response.data;\n    });\n\nexport const getUserPlaylists = () =>\n  axios\n    .get(`/api/users/current/playlists`)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error.response.data;\n    });\n\nexport const getPlaylist = (playlistId) =>\n  axios\n    .get(`/api/playlists/${playlistId}`)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error.response.data;\n    });\n\nexport const getRecentPlaylists = () =>\n  axios\n    .get(`/api/playlists/recent`)\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error.response.data;\n    });\n","import React, { useState } from \"react\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\nimport { authService, messagingService, userService } from \"../../services\";\nimport { AuthInputs, PlaylistSearchBar, SideMenu } from \"..\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./header.scss\";\n\nfunction Header(props) {\n  const [showAuthInputs, setShowAuthInputs] = useState(false);\n  const [showRegisterInputs, setShowRegisterInputs] = useState(false);\n  const [temporaryMessage, setTemporaryMessage] = useState(\"\");\n  const [enterUsername, setEnterUsername] = useState(false);\n  const history = useHistory();\n\n  const resetHeader = () => {\n    setShowRegisterInputs(false);\n    setShowAuthInputs(false);\n  };\n\n  const handleLogin = (input) => {\n    const { email, password } = input;\n    authService.login(email, password).then((response) => {\n      if (response.status === 200) {\n        messagingService.disconnectSocket();\n        if (response.data.username) {\n          resetHeader();\n          welcome(response.data.username);\n        } else {\n          setEnterUsername(true);\n          displayTemporaryMessage(\"WHAT SHOULD WE CALL YOU?\");\n        }\n        props.loadUserData();\n      } else {\n        displayAuthResponse(response);\n      }\n    });\n  };\n\n  const handleSetUsername = (username) => {\n    userService\n      .setUsername(props.currentUser._id, username)\n      .then((response) => {\n        if (response.status === 200) {\n          welcome(response.data.username);\n          setEnterUsername(false);\n          props.loadUserData();\n        } else {\n          displayAuthResponse(response);\n        }\n      });\n  };\n\n  const welcome = (username) => {\n    resetHeader();\n    displayTemporaryMessage(`WELCOME, ${username}`);\n  };\n\n  const handleRegister = (input) => {\n    const { email, password, passwordConfirm } = input;\n    passwordConfirm === password\n      ? authService.register(email, password).then((response) => {\n          displayAuthResponse(response);\n          response.status === 200 && resetHeader();\n        })\n      : displayTemporaryMessage(\"PASSWORDS DO NOT MATCH\");\n  };\n\n  const displayAuthResponse = (response) => {\n    const message = Object.values(response.data)[0].msg\n      ? Object.values(response.data)[0].msg\n      : response.data;\n    displayTemporaryMessage(message.toUpperCase());\n  };\n\n  const loginOrRegister = (input) => {\n    if (!showRegisterInputs) {\n      handleLogin(input);\n    } else {\n      handleRegister(input);\n    }\n  };\n\n  const displayTemporaryMessage = (message) => {\n    setTemporaryMessage(message);\n    setTimeout(() => {\n      setTemporaryMessage(null);\n    }, 2000);\n  };\n\n  return (\n    <div id=\"headerContainer\">\n      <div\n        id=\"header\"\n        className={`\n          ${temporaryMessage && \"color-animation\"}\n          ${!showAuthInputs && \"signed-in-header\"}\n        `}\n      >\n        {temporaryMessage && (\n          <Typography className={\"temporaryMessage\"} variant=\"h5\">\n            {temporaryMessage}\n          </Typography>\n        )}\n        {!temporaryMessage && props.loaded && (\n          <React.Fragment>\n            <div id=\"navButtonsContainer\">\n              {props.currentUser && props.currentUser.username ? (\n                <SideMenu\n                  id=\"sideMenuIconContainer\"\n                  loadUserData={props.loadUserData}\n                />\n              ) : (\n                <div id=\"loginButtonContainer\">\n                  {!showAuthInputs || showRegisterInputs ? (\n                    <Button\n                      id=\"loginButton\"\n                      onClick={() => {\n                        setShowAuthInputs(true);\n                        setShowRegisterInputs(false);\n                      }}\n                    >\n                      Login\n                    </Button>\n                  ) : (\n                    <Button\n                      id=\"registerButton\"\n                      onClick={() => setShowRegisterInputs(true)}\n                    >\n                      No Account?\n                    </Button>\n                  )}\n                </div>\n              )}\n            </div>\n            {showAuthInputs && (\n              <AuthInputs\n                resetHeader={resetHeader}\n                loginOrRegister={loginOrRegister}\n                handleSetUsername={handleSetUsername}\n                enterUsername={enterUsername}\n                setEnterUsername={setEnterUsername}\n                showRegisterInputs={showRegisterInputs}\n              />\n            )}\n            {!showAuthInputs && (\n              <PlaylistSearchBar\n                playlists={props.playlists}\n                displayTemporaryMessage={displayTemporaryMessage}\n              />\n            )}\n            <div id=\"messaging-icon-column\">\n              <div\n                id=\"messaging-icon-container\"\n                onClick={props.toggleMessagingSidebar}\n              >\n                {props.currentUser && props.currentUser.username ? (\n                  <React.Fragment>\n                    {!props.messagingSidebarOpen ? (\n                      <ChatBubbleOutlineIcon\n                        id=\"messaging-icon-outline\"\n                        style={{\n                          fontSize: 40,\n                        }}\n                      ></ChatBubbleOutlineIcon>\n                    ) : (\n                      <ChatBubbleIcon\n                        id=\"messaging-icon-filled\"\n                        style={{ fontSize: 40 }}\n                      ></ChatBubbleIcon>\n                    )}\n                  </React.Fragment>\n                ) : (\n                  <React.Fragment>\n                    {!showAuthInputs && (\n                      <WhatshotIcon\n                        onClick={() => history.push(\"/\")}\n                        style={{ fontSize: 40 }}\n                      />\n                    )}\n                  </React.Fragment>\n                )}\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../header/header.scss\";\n\nexport default function PlaylistSearchBar(props) {\n  const history = useHistory();\n\n  return (\n    <div className=\"playlist-search-bar-container\">\n      <Autocomplete\n        size=\"small\"\n        className=\"playlist-search-bar\"\n        options={props.playlists || []}\n        onChange={(evt, playlist) => {\n          props.displayTemporaryMessage(`\\u266b ${playlist.title} \\u266b`);\n          history.push(`/playlist/${playlist._id}`);\n        }}\n        getOptionLabel={(option) => option.title}\n        renderInput={(params) => {\n          return (\n            <TextField\n              {...params}\n              InputProps={{\n                ...params.InputProps,\n                style: { color: \"#fff\" },\n              }}\n              label=\"Search for a playlist\"\n              variant=\"outlined\"\n            />\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport \"../header/header.scss\";\n\nfunction AuthInputs(props) {\n  const [authInput, setAuthInput] = useState({});\n  const emailInput = useRef(null);\n\n  const handleEnterPressed = (evt) => {\n    console.log(\"auth input : \", authInput);\n    if (evt.key === \"Enter\") {\n      loginRegisterOrSetUsername();\n    }\n  };\n\n  const loginRegisterOrSetUsername = () => {\n    !props.enterUsername\n      ? props.loginOrRegister(authInput)\n      : props.handleSetUsername(authInput.username);\n  };\n\n  useEffect(() => {\n    emailInput && emailInput.current.focus();\n  }, [props.showRegisterInputs]);\n\n  const authInputStyles = { border: \"1px solid white\", color: \"white\" };\n\n  return (\n    <div\n      id=\"authInputs\"\n      className={props.showRegisterInputs ? \"showRegisterInputs\" : \"\"}\n    >\n      <TextField\n        autoFocus\n        inputRef={emailInput}\n        value={authInput.username || authInput.email || \"\"}\n        className={`authInput emailInput ${\n          props.enterUsername && \"username-input\"\n        }`}\n        size=\"small\"\n        onChange={(evt) =>\n          !props.enterUsername\n            ? setAuthInput({ ...authInput, email: evt.target.value })\n            : setAuthInput({ ...authInput, username: evt.target.value })\n        }\n        onKeyDown={(evt) => handleEnterPressed(evt)}\n        variant=\"outlined\"\n        placeholder={!props.enterUsername ? \"Email\" : \"Username\"}\n        InputProps={{ style: authInputStyles }}\n      />\n      {!props.enterUsername && (\n        <TextField\n          type=\"password\"\n          value={authInput.password || \"\"}\n          className={\"authInput passwordInput\"}\n          size=\"small\"\n          onChange={(evt) =>\n            setAuthInput({ ...authInput, password: evt.target.value })\n          }\n          onKeyDown={(evt) => handleEnterPressed(evt)}\n          variant=\"outlined\"\n          placeholder=\"Password\"\n          InputProps={{ style: authInputStyles }}\n        />\n      )}\n      {props.showRegisterInputs && (\n        <TextField\n          type=\"password\"\n          value={authInput.passwordConfirm || \"\"}\n          className={\"authInput confirmPasswordInput\"}\n          size=\"small\"\n          onChange={(evt) =>\n            setAuthInput({\n              ...authInput,\n              passwordConfirm: evt.target.value,\n            })\n          }\n          onKeyDown={(evt) => handleEnterPressed(evt)}\n          variant=\"outlined\"\n          placeholder=\"Confirm Password\"\n          InputProps={{ style: authInputStyles }}\n        />\n      )}\n\n      <div\n        className={\n          props.showRegisterInputs\n            ? \"loginSubmitContainerRegister\"\n            : \"loginSubmitContainer\"\n        }\n      >\n        <Button\n          onClick={() => loginRegisterOrSetUsername(authInput)}\n          variant=\"outlined\"\n          className={\"submit\"}\n        >\n          <ChevronRightIcon fontSize=\"large\" />\n        </Button>\n        <Button\n          onClick={() => props.resetHeader() && setAuthInput({})}\n          variant=\"outlined\"\n          className={\"close\"}\n        >\n          <CloseIcon fontSize=\"default\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default AuthInputs;\n","import React, { useState, useEffect } from \"react\";\nimport \"./messaging.scss\";\nimport { Conversations, Chat } from \"../\";\nimport { userService, messagingService } from \"../../services\";\n\nrequire(\"dotenv\").config();\n\nexport default function Messaging(props) {\n  const [correspondent, setCorrespondent] = useState(null);\n  const [conversations, setConversations] = useState({});\n  const [latestMessage, setLatestMessage] = useState();\n  const [newMessageCount, incrementNewMessageCount] = useState(0);\n  const [fetchCount, incrementFetchCount] = useState(0);\n\n  useEffect(() => {\n    if (props.currentUser) {\n      userService\n        .getConversations(props.currentUser._id)\n        .then((conversations) => {\n          setConversations(conversations);\n          props.socket.on(\"message\", function (data) {\n            setLatestMessage(data);\n          });\n        });\n    }\n  }, [props.socket]);\n\n  useEffect(() => {\n    if (latestMessage) {\n      setConversations(\n        messagingService.updateConversations(latestMessage, conversations)\n      );\n      incrementNewMessageCount(newMessageCount + 1);\n    }\n  }, [latestMessage]);\n\n  const getMessages = () => {\n    messagingService\n      .fetchMoreMessages(conversations, correspondent._id)\n      .then((updatedConversations) => {\n        setConversations(updatedConversations);\n        incrementFetchCount(fetchCount + 1);\n      });\n  };\n\n  return (\n    <div\n      className={\n        props.messagingSidebarOpen\n          ? \"visible messaging-container\"\n          : \"hidden messaging-container\"\n      }\n    >\n      {!correspondent && (\n        <Conversations\n          users={props.users}\n          currentUser={props.currentUser}\n          conversations={conversations}\n          setCorrespondent={setCorrespondent}\n        />\n      )}\n      {correspondent && (\n        <Chat\n          messages={\n            conversations[correspondent._id]\n              ? [...conversations[correspondent._id].messages]\n              : []\n          }\n          fetchCount={fetchCount}\n          newMessageCount={newMessageCount}\n          correspondent={correspondent}\n          getMessages={getMessages}\n          setCorrespondent={setCorrespondent}\n        />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./conversations.scss\";\nimport { TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ConversationSnippet } from \"..\";\n\nrequire(\"dotenv\").config();\n\nexport default function Conversations(props) {\n  const users = props.users\n    ? delete props.users[props.currentUser._id] && Object.values(props.users)\n    : [];\n\n  return (\n    <div id=\"conversationsContainer\">\n      <div id=\"searchContainer\">\n        <Autocomplete\n          id=\"users-list\"\n          className=\"users-list-autocomplete\"\n          options={users}\n          onChange={(evt, correspondent) => {\n            props.setCorrespondent(correspondent);\n          }}\n          getOptionLabel={(option) => option.username}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              InputLabelProps={{\n                style: { color: \"#fff\" },\n              }}\n              placeholder=\"Search for a user\"\n              label=\"Search for a user\"\n              variant=\"outlined\"\n            />\n          )}\n        />\n      </div>\n      <div id=\"conversation-snippets-container\">\n        {props.conversations &&\n          Object.keys(props.conversations).map((correspondent) => (\n            <div\n              key={`conversation${props.conversations[correspondent]._id}`}\n              className={\"conversation-snippet-container\"}\n              onClick={(evt) => {\n                props.setCorrespondent(props.users[correspondent]);\n              }}\n            >\n              <ConversationSnippet\n                currentUser={props.currentUser}\n                correspondent={props.users[correspondent]}\n                message={props.conversations[correspondent].messages[0]}\n              />\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./conversation-snippet.scss\";\n\nrequire(\"dotenv\").config();\n\nexport default function Conversations(props) {\n  return (\n    <div className=\"conversation-snippet\">\n      <p>\n        <b>{props.correspondent && props.correspondent.username}</b>\n      </p>\n      <p>{props.message.contents}</p>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuOpenIcon from \"@material-ui/icons/MenuOpen\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\nimport { authService, messagingService } from \"../../services\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./side-menu.scss\";\n\nexport default function SideMenu(props) {\n  const history = useHistory();\n\n  const [state, setState] = React.useState({\n    sideMenu: false,\n  });\n\n  const toggleSideMenu = (sideMenu, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [sideMenu]: open });\n  };\n\n  const handleLogout = () => {\n    authService.logout().then(() => {\n      messagingService.disconnectSocket();\n      props.loadUserData();\n      history.push(\"/\");\n    });\n  };\n\n  const list = (anchor) => (\n    <div\n      role=\"presentation\"\n      onClick={toggleSideMenu(anchor, false)}\n      onKeyDown={toggleSideMenu(anchor, false)}\n    >\n      <List>\n        <ListItem onClick={() => history.push(`/`)} button key={\"hotPlaylists\"}>\n          <ListItemIcon>\n            <WhatshotIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"Hot Playlists\"} />\n        </ListItem>\n        <ListItem\n          onClick={() => history.push(`/my-playlists`)}\n          button\n          key={\"playlists\"}\n        >\n          <ListItemIcon>\n            <LibraryMusicIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"My Playlists\"} />\n        </ListItem>\n        <ListItem\n          onClick={() => history.push(`/playlist-create`)}\n          button\n          key={\"newPlaylist\"}\n        >\n          <ListItemIcon>\n            <AddCircleOutlineIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"New Playlist\"} />\n        </ListItem>\n        <ListItem onClick={handleLogout} button key={\"logout\"}>\n          <ListItemIcon>\n            <ExitToAppIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"Logout\"} />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <React.Fragment key={\"sideMenu\"}>\n        <Button\n          style={{ height: \"100%\" }}\n          onClick={toggleSideMenu(\"sideMenu\", true)}\n        >\n          {!state.sideMenu ? (\n            <MenuIcon style={{ fontSize: \"40px\", color: \"white\" }} />\n          ) : (\n            <MenuOpenIcon style={{ fontSize: \"40px\", color: \"white\" }} />\n          )}\n        </Button>\n        <Drawer\n          anchor={\"left\"}\n          open={state[\"sideMenu\"]}\n          onClose={toggleSideMenu(\"sideMenu\", false)}\n        >\n          {list(\"sideMenu\")}\n        </Drawer>\n      </React.Fragment>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { playlistService, messagingService } from \"../../services\";\nimport { Player, GroupChat } from \"..\";\nimport { useHistory } from \"react-router-dom\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport \"./playlist.scss\";\n\nrequire(\"dotenv\").config();\n\nexport default function Playlist(props) {\n  const [playerReady, setPlayerReady] = useState(false);\n  const [playlist, setPlaylist] = useState(null);\n  const [latestMessage, setLatestMessage] = useState(null);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [recentGroup, setRecentGroup] = useState(null);\n  const history = useHistory();\n  const group = props.match.params.id;\n\n  useEffect(() => {\n    return () => props.socket && messagingService.leaveGroup(group);\n  }, []);\n\n  useEffect(() => {\n    setNewPlaylist();\n  }, [props.match.params.id]);\n\n  useEffect(() => {\n    initializeChat();\n  }, [props.socket]);\n\n  const setNewPlaylist = () => {\n    const urlParam = new URLSearchParams(window.location.search).get(\"track\");\n    const track = urlParam ? urlParam - 1 : 0;\n    setCurrentTrackIndex(track);\n    playlistService.getPlaylist(props.match.params.id).then((playlist) => {\n      setPlaylist(playlist);\n      initializeChat();\n      history.push(`/playlist/${playlist._id}`);\n    });\n  };\n\n  const initializeChat = () => {\n    props.socket.emit(\"join-group\", group, recentGroup);\n    setRecentGroup(group);\n    props.socket.on(\"group-message\", function (data) {\n      setLatestMessage(data);\n    });\n  };\n\n  const trackBack = () => {\n    currentTrackIndex - 1 >= 0 && setCurrentTrackIndex(currentTrackIndex - 1);\n  };\n\n  const trackForward = () => {\n    currentTrackIndex + 1 <= playlist.tracks.length - 1 &&\n      setCurrentTrackIndex(currentTrackIndex + 1);\n  };\n\n  return (\n    <div className=\"playlist-container\">\n      <div className=\"playlist\">\n        {playerReady && (\n          <button className=\"back-button\">\n            <ChevronLeftIcon onClick={trackBack} style={{ fontSize: 45 }} />\n          </button>\n        )}\n        {playlist && (\n          <Player\n            currentTrack={\n              playlist.tracks[currentTrackIndex] &&\n              playlist.tracks[currentTrackIndex].url\n            }\n            trackForward={trackForward}\n            setPlayerReady={setPlayerReady}\n          />\n        )}\n        {playerReady && (\n          <button className=\"forward-button\">\n            {\" \"}\n            <ChevronRightIcon onClick={trackForward} style={{ fontSize: 45 }} />\n          </button>\n        )}\n      </div>\n      {playerReady && (\n        <GroupChat\n          currentUser={props.currentUser}\n          latestMessage={latestMessage}\n          group={group}\n        />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactPlayer from \"react-player\";\nimport \"./player.scss\";\n\nrequire(\"dotenv\").config();\n\nexport default function Player(props) {\n  const isFacebookUrl = /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?facebook\\.com\\/[a-zA-Z0-9\\.]+\\/videos\\/(?:[a-zA-Z0-9\\.]+\\/)?([0-9]+)/.test(\n    props.currentTrack\n  );\n\n  return (\n    <div className=\"player-wrapper\">\n      {props.currentTrack ? (\n        <ReactPlayer\n          className={!isFacebookUrl ? \"react-player\" : \"facebook-react-player\"}\n          url={props.currentTrack}\n          width={!isFacebookUrl ? \"100%\" : \"calc(50% - 46px)\"}\n          height={\"100%\"}\n          controls={true}\n          onEnded={props.trackForward}\n          playing={true}\n          onReady={() => props.setPlayerReady(true)}\n        />\n      ) : (\n        <h2 style={{ color: \"white\", margin: \"auto\", textAlign: \"center\" }}>\n          No Playlist Selected\n        </h2>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { useHistory } from \"react-router-dom\";\nimport { playlistService, thumbnailService } from \"../../services\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { SortableGrid } from \"..\";\n\nimport \"./playlist-create.scss\";\n\nrequire(\"dotenv\").config();\n\nexport default function Playlist(props) {\n  const [tracks, setTracks] = useState([]);\n  const [title, setTitle] = useState(null);\n  const [errors, setErrors] = useState({ title: null, tracks: null });\n  const [trackToAdd, setTrackToAdd] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    props.edit &&\n      playlistService.getPlaylist(props.match.params.id).then((playlist) => {\n        setTracks(playlist.tracks);\n        setTitle(playlist.title);\n      });\n  }, []);\n\n  const saveChanges = () => {\n    playlistService\n      .updatePlaylist(props.match.params.id, { title, tracks })\n      .then((playlist) => {\n        playlist.errors\n          ? setErrors(playlist.errors)\n          : history.push(\"/my-playlists\");\n      });\n  };\n\n  const createPlaylist = (evt) => {\n    evt.preventDefault();\n    if (tracks.length > 0) {\n      playlistService.createPlaylist(title, tracks).then((playlist) => {\n        playlist.errors\n          ? setErrors(playlist.errors)\n          : playlist && history.push(`/playlist/${playlist._id}`);\n      });\n    } else {\n      setErrors({ tracks: \"Add some tracks!\" });\n    }\n  };\n\n  const addTrack = async (evt) => {\n    evt.preventDefault();\n    if (ReactPlayer.canPlay(trackToAdd)) {\n      const thumbnailUrl = await thumbnailService.getThumbnailURL(trackToAdd);\n      setTracks([...tracks, { url: trackToAdd, thumbnailUrl }]);\n      setTrackToAdd(\"\");\n      errors.tracks && setErrors({ tracks: null });\n    } else {\n      setErrors({ tracks: \"Cannot add track\" });\n    }\n  };\n\n  const deleteTrack = (index) => {\n    tracks.splice(index, 1) && setTracks([...tracks]);\n  };\n\n  return (\n    <div className=\"playlist-create-container\">\n      <div className=\"playlist-create-inputs-container\">\n        <div\n          className={`input-container playlist-create-input-container ${\n            props.edit && \"edit-inputs-container\"\n          }`}\n        >\n          <TextField\n            onKeyDown={(evt) => evt.key === \"Enter\" && addTrack(evt)}\n            placeholder=\"Paste link to media here\"\n            value={trackToAdd || \"\"}\n            error={errors.tracks}\n            className=\"message-input\"\n            onChange={(evt) => setTrackToAdd(evt.target.value)}\n            autoFocus\n            InputProps={{\n              style: { color: \"#fff\" },\n            }}\n          />\n          <Button\n            className=\"standard-submit-button\"\n            onClick={(evt) => addTrack(evt)}\n            variant=\"contained\"\n          >\n            Add Track\n          </Button>\n        </div>\n        <div\n          className={`input-container playlist-create-input-container ${\n            props.edit && \"edit-inputs-container\"\n          }`}\n        >\n          <TextField\n            onKeyDown={(evt) => evt.key === \"Enter\" && createPlaylist(evt)}\n            placeholder={!props.edit && \"Enter your playlist title here\"}\n            error={errors.title}\n            value={title || \"\"}\n            className=\"message-input\"\n            onChange={(evt) => setTitle(evt.target.value)}\n            InputProps={{\n              style: { color: \"#fff\" },\n            }}\n          />\n          <Button\n            className=\"standard-submit-button\"\n            onClick={(evt) => {\n              props.edit ? saveChanges() : createPlaylist(evt);\n            }}\n            variant=\"contained\"\n          >\n            {!props.edit ? \"Create\" : \"Save Changes\"}\n          </Button>\n        </div>\n      </div>\n      {tracks && (\n        <SortableGrid\n          tracks={tracks}\n          setTracks={setTracks}\n          deleteTrack={deleteTrack}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { playlistService } from \"../../services\";\nimport { GeneralModal } from \"..\";\nimport Button from \"@material-ui/core/Button\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport DefaultThumbnail from \"../../assets/cassette.gif\";\nimport \"./playlists.scss\";\n\nexport default function Playlists(props) {\n  const [playlists, setPlaylists] = useState([]);\n  const [playlistToDelete, setPlaylistToDelete] = useState(null);\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    props.socket ? getActivePlaylists() : getPlaylists();\n  }, [props.socket]);\n\n  const play = (playlist, track) => {\n    if (track) {\n      history.push(`/playlist/${playlist._id}?track=${track}`);\n    } else {\n      history.push(`/playlist/${playlist._id}`);\n    }\n  };\n\n  const edit = (playlist) => {\n    history.push(`/playlist-edit/${playlist._id}`);\n  };\n\n  const openDeleteModal = (playlist) => {\n    setPlaylistToDelete(playlist);\n    setDeleteModalOpen(true);\n  };\n\n  const closeDeleteModal = () => {\n    setPlaylistToDelete(null);\n    setDeleteModalOpen(false);\n  };\n\n  const deletePlaylist = (playlist) => {\n    // consider making optimistic update in future...maybe index playlists on arrival for easy delete?\n    playlistService.deletePlaylist(playlist._id).then(() => {\n      getPlaylists();\n      closeDeleteModal();\n    });\n    setPlaylistToDelete(null);\n  };\n\n  const getPlaylists = () => {\n    playlistService.getUserPlaylists().then((playlists) => {\n      setPlaylists(playlists);\n    });\n  };\n\n  const getActivePlaylists = () => {\n    props.socket.on(\"get-active-playlists\", function (data) {\n      setPlaylists([...data]);\n    });\n    props.socket.emit(\"get-active-playlists\", true);\n  };\n\n  return (\n    <div className=\"my-playlists-container\">\n      {playlists &&\n        playlists.map((playlist, index) => (\n          <div key={`playlist${index}`} className=\"playlist\">\n            <div className=\"playlist-head\">\n              <div\n                className={`playlist-title-container ${\n                  props.socket && \"hot color-animation\"\n                }`}\n              >\n                <h2>{playlist.title}</h2>\n              </div>\n              <div className=\"playlist-functions-container\">\n                <Button\n                  className={`playlist-play-button standard-submit-button`}\n                  variant=\"contained\"\n                  style={{ gridColumn: props.socket && \"1 / span 2\" }}\n                  onClick={() => play(playlist)}\n                >\n                  Play\n                </Button>\n                {!props.socket && (\n                  <Button\n                    className=\"playlist-edit-button standard-submit-button\"\n                    variant=\"contained\"\n                    onClick={() => edit(playlist)}\n                  >\n                    Edit\n                  </Button>\n                )}\n              </div>\n            </div>\n            <div className=\"playlist-body\">\n              {playlist.tracks.map((track, index) => (\n                <div\n                  onClick={() => play(playlist, index + 1)}\n                  key={`track${index}`}\n                  className=\"my-playlists-thumbnail\"\n                >\n                  <img\n                    src={\n                      track.thumbnailUrl ? track.thumbnailUrl : DefaultThumbnail\n                    }\n                    className=\"track-preview\"\n                  />\n                </div>\n              ))}\n            </div>\n            {!props.socket && (\n              <Button\n                className=\"delete-playlist-button\"\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                onClick={() => openDeleteModal(playlist)}\n              >\n                <ClearIcon fontSize=\"small\" />\n              </Button>\n            )}\n          </div>\n        ))}\n      {!playlists[0] && (\n        <div className=\"no-playlists\">\n          <h2>No playlists here!</h2>\n        </div>\n      )}\n      <GeneralModal\n        action={deletePlaylist}\n        open={deleteModalOpen}\n        handleClose={closeDeleteModal}\n        item={playlistToDelete && playlistToDelete}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { sortableContainer, sortableElement } from \"react-sortable-hoc\";\nimport arrayMove from \"array-move\";\nimport { TrackThumbnail } from \"../../components\";\nimport \"./sortable-grid.scss\";\nimport \"../player/player.scss\";\n\nexport default function SortableGrid(props) {\n  const SortableItem = sortableElement(({ i, track }) => {\n    return (\n      <TrackThumbnail\n        thumbnailUrl={track.thumbnailUrl}\n        deleteTrack={props.deleteTrack}\n        index={i}\n        className=\"sortable-item\"\n      />\n    );\n  });\n\n  const SortableContainer = sortableContainer(({ children }) => {\n    return <div className=\"sortable-container\">{children}</div>;\n  });\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    const previousTracks = props.tracks;\n    props.setTracks(arrayMove(previousTracks, oldIndex, newIndex));\n  };\n\n  return (\n    <SortableContainer axis=\"xy\" onSortEnd={onSortEnd}>\n      {props.tracks.map((track, index) => (\n        <SortableItem\n          key={`item-${index}`}\n          index={index}\n          i={index}\n          track={track}\n        />\n      ))}\n    </SortableContainer>\n  );\n}\n","import React, { useState } from \"react\";\nimport DefaultThumbnail from \"../../assets/cassette.gif\";\nimport \"./track-thumbnail.scss\";\n\nexport default function TrackThumbnail(props) {\n  const [hovered, setHovered] = useState(false);\n\n  return (\n    <div\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      className=\"sortable-item\"\n    >\n      {/* thumbnail */}\n      <img\n        src={props.thumbnailUrl ? props.thumbnailUrl : DefaultThumbnail}\n        className={`track-preview \n          ${hovered && \"low-opacity\"}`}\n      />\n      {/* desktop delete button */}\n      {hovered && (\n        <button\n          onClick={() => props.deleteTrack(props.index)}\n          className=\"track-remove-button\"\n        >\n          DELETE\n        </button>\n      )}\n      {/* mobile delete button */}\n      <button\n        onClick={() => props.deleteTrack(props.index)}\n        className=\"track-remove-button-mobile\"\n      >\n        DELETE\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { messagingService } from \"../../services\";\nimport \"./group-chat.scss\";\nimport \"../chat/chat.scss\";\n\nrequire(\"dotenv\").config();\n\nexport default function GroupChat(props) {\n  const [messages, setMessages] = useState([]);\n  const [messagesSent, setMessagesSent] = useState(0);\n  const [messageToSend, setMessageToSend] = useState(\"\");\n  const endOfChat = useRef(null);\n\n  useEffect(() => {\n    setMessages([]);\n  }, [props.group]);\n\n  const throttleMessages = () => {\n    if (messagesSent === 0) {\n      setTimeout(() => {\n        setMessagesSent(0);\n      }, 5000);\n    }\n    setMessagesSent(messagesSent + 1);\n  };\n\n  useEffect(() => {\n    props.latestMessage && setMessages([props.latestMessage, ...messages]);\n  }, [props.latestMessage]);\n\n  const sendMessage = (evt, messageToSend) => {\n    if (messageToSend.length > 0 && messagesSent < 3) {\n      throttleMessages();\n      messagingService.sendGroupMessage(\n        evt,\n        messageToSend,\n        {\n          _id: props.currentUser ? props.currentUser._id : \"\",\n          username: props.currentUser\n            ? props.currentUser.username\n            : \"Anonymous\",\n        },\n        props.group\n      ) && setMessageToSend(\"\");\n    }\n  };\n\n  return (\n    <div className=\"group-chat\">\n      <div id=\"groupMessagesContainer\" className=\"messages-container\">\n        {messages.map((message, index) => (\n          <div className=\"message\" key={`message${index}`}>\n            <p className=\"message-sender\">{message.correspondent.username}</p>\n            <p className=\"group-message-content\">{message.message}</p>\n          </div>\n        ))}\n        <div ref={endOfChat}></div>\n      </div>\n      <div id=\"groupChatFooter\">\n        <div className=\"input-container\">\n          <TextField\n            onKeyDown={(evt) =>\n              evt.key === \"Enter\" && sendMessage(evt, messageToSend)\n            }\n            placeholder=\"Send a message\"\n            value={messageToSend}\n            className=\"message-input\"\n            onChange={(evt) => setMessageToSend(evt.target.value)}\n            InputProps={{\n              style: { color: \"#fff\" },\n            }}\n          />\n          <Button\n            className=\"standard-submit-button\"\n            onClick={(evt) => sendMessage(evt, messageToSend)}\n            variant=\"contained\"\n          >\n            Send\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\nimport { messagingService } from \"../../services\";\nimport \"./chat.scss\";\n\nrequire(\"dotenv\").config();\n\nexport default function Chat(props) {\n  const [messageToSend, setMessageToSend] = useState(\"\");\n  const endOfChat = useRef(null);\n  const scrollPosition = useRef(null);\n\n  const sendMessage = (evt, messageToSend) => {\n    messagingService.sendPrivateMessage(\n      evt,\n      messageToSend,\n      props.correspondent._id\n    ) && setMessageToSend(\"\");\n  };\n\n  const displayMessages = () => {\n    const messages = [];\n    for (let i = props.messages.length - 1; i >= 0; i--) {\n      messages.push(\n        <div\n          key={`message${props.messages[i]._id}${i}`}\n          className={\n            props.messages[i].sender === props.correspondent._id\n              ? \"their-message\"\n              : \"my-message\"\n          }\n        >\n          <div className={\"message\"}>{props.messages[i].contents}</div>\n        </div>\n      );\n\n      if (i === props.messages.length - 30)\n        messages.push(<div key=\"scrollPosition\" ref={scrollPosition}></div>);\n    }\n    return messages;\n  };\n\n  useEffect(() => {\n    props.fetchCount > 0 && scrollPosition.current.scrollIntoView();\n  }, [props.fetchCount]);\n\n  useEffect(() => {\n    endOfChat.current.scrollIntoView();\n  }, [props.newMessageCount]);\n\n  return (\n    <div id=\"chatContainer\">\n      <div id=\"chatHeaderContainer\">\n        <KeyboardBackspaceIcon\n          id=\"backArrow\"\n          onClick={() => props.setCorrespondent(null)}\n          style={{ fontSize: 40 }}\n        />\n        <h2 id=\"chatHeader\">{props.correspondent.username}</h2>\n      </div>\n      <div\n        className=\"messagesContainer\"\n        onScroll={(evt) => evt.target.scrollTop === 0 && props.getMessages()}\n      >\n        {displayMessages()}\n        <div ref={endOfChat}></div>\n      </div>\n      <div className=\"chatFooter\">\n        <div className=\"input-container\">\n          <TextField\n            onKeyDown={(evt) =>\n              evt.key === \"Enter\" && sendMessage(evt, messageToSend)\n            }\n            placeholder=\"Send a message\"\n            value={messageToSend}\n            className=\"message-input\"\n            onChange={(evt) => setMessageToSend(evt.target.value)}\n            InputProps={{\n              style: { color: \"#fff\" },\n            }}\n            multiline\n          />\n          <Button\n            className=\"standard-submit-button\"\n            onClick={(evt) => sendMessage(evt, messageToSend)}\n            variant=\"contained\"\n          >\n            Send\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    color: \"#fff\",\n    width: 260,\n    backgroundColor: \"black\",\n    border: \"1px solid #f50057\",\n    borderRadius: \"10px\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    textAlign: \"center\",\n  },\n}));\n\nexport default function GeneralModal(props) {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Delete {props.item && props.item.title}?</h2>\n      <Button\n        onClick={() => props.action(props.item)}\n        variant=\"outlined\"\n        color=\"secondary\"\n      >\n        DELETE\n      </Button>\n      <GeneralModal />\n    </div>\n  );\n\n  return (\n    <Modal\n      id=\"generalModal\"\n      open={props.open}\n      onClose={props.handleClose}\n      aria-labelledby=\"simple-modal-title\"\n    >\n      {body}\n    </Modal>\n  );\n}\n","import { createMuiTheme } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fff\",\n    },\n  },\n});\n\nexport { theme };\n","import React, { useState, useEffect } from \"react\";\nimport { useToggle } from \"./hooks\";\nimport {\n  Playlist,\n  Playlists,\n  PlaylistCreate,\n  Messaging,\n  Header,\n} from \"./components\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { messagingService, userService, playlistService } from \"./services\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { theme } from \"./material-overrides/header\";\nimport \"./App.scss\";\n\nexport default function App() {\n  const [messagingSidebarStatus, setMessagingSidebarStatus] = useToggle();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [users, setUsers] = useState({});\n  const [socket, setSocket] = useState(null);\n  const [recentPlaylists, setRecentPlaylists] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  // load 1000 most popular and 1000 most recent playlists. Search bar will use these.\n  // in addition, will display most recent and most popular on home page\n\n  useEffect(() => {\n    loadRecentPlaylists();\n    loadUserData();\n  }, []);\n\n  const loadUserData = () => {\n    userService.getCurrentUser().then((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setAnonymousUser();\n      }\n      setLoaded(true);\n    });\n  };\n\n  const setAnonymousUser = () => {\n    setCurrentUser(null);\n    setSocket(messagingService.connectSocket());\n  };\n\n  const setUser = (user) => {\n    setCurrentUser(user);\n    setSocket(messagingService.authenticateSocket());\n    userService.getUsers().then((users) => {\n      setUsers(users);\n    });\n  };\n\n  const loadRecentPlaylists = () => {\n    playlistService.getRecentPlaylists().then((playlists) => {\n      setRecentPlaylists(playlists);\n    });\n  };\n\n  return (\n    <HelmetProvider>\n      <div id=\"app\">\n        <Helmet>\n          <meta\n            name=\"viewport\"\n            content=\"minimum-scale=1, initial-scale=1, width=device-width\"\n          />\n        </Helmet>\n        <ThemeProvider theme={theme}>\n          <Router>\n            <Header\n              messagingSidebarOpen={messagingSidebarStatus}\n              toggleMessagingSidebar={setMessagingSidebarStatus}\n              playlists={recentPlaylists}\n              loaded={loaded}\n              loadUserData={loadUserData}\n              currentUser={currentUser}\n            ></Header>\n            <div id=\"main-section-container\">\n              <div\n                id=\"main-section\"\n                className={\n                  messagingSidebarStatus ? \"mobile-main-section\" : undefined\n                }\n              >\n                <Switch>\n                  <Route\n                    path=\"/my-playlists\"\n                    render={() => <Playlists />}\n                  ></Route>\n                  <Route\n                    path=\"/playlist/:id\"\n                    render={(props) =>\n                      socket && (\n                        <Playlist\n                          {...props}\n                          currentUser={currentUser}\n                          socket={socket}\n                        />\n                      )\n                    }\n                  ></Route>\n                  <Route\n                    path=\"/playlist-edit/:id\"\n                    render={(props) =>\n                      currentUser && <PlaylistCreate {...props} edit={true} />\n                    }\n                  ></Route>\n                  <Route\n                    path=\"/playlist-create\"\n                    render={() => <PlaylistCreate edit={false} />}\n                  ></Route>\n                  <Route\n                    path=\"/\"\n                    render={() => socket && <Playlists socket={socket} />}\n                  ></Route>\n                </Switch>\n              </div>\n              {socket && currentUser && (\n                <Messaging\n                  users={users}\n                  socket={socket}\n                  currentUser={currentUser}\n                  messagingSidebarOpen={messagingSidebarStatus}\n                />\n              )}\n            </div>\n          </Router>\n        </ThemeProvider>\n      </div>\n    </HelmetProvider>\n  );\n}\n","import React from \"react\";\nexport default function useToggle(initialValue = false) {\n  const [value, setValue] = React.useState(initialValue);\n  const toggle = React.useCallback(() => {\n    setValue((value) => !value);\n  }, []);\n  return [value, toggle];\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cassette.f720df37.gif\";"],"sourceRoot":""}